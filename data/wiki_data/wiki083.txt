TheOpen Systems Interconnection(OSI)modelis areference modelfrom theInternational Organization for Standardization(ISO) that "provides a common basis for the coordination of standards development for the purpose of systems interconnection."In the OSI reference model, the communications between systems are split into seven different abstraction layers: Physical, Data Link, Network, Transport, Session, Presentation, and Application.
The model partitions the flow of data in a communication system into sevenabstraction layersto describe networked communication from the physical implementation of transmittingbitsacross acommunications mediumto the highest-level representation of data of adistributed application. Each intermediate layer serves a class of functionality to the layer above it and is served by the layer below it.
Classes of functionality are implemented in software development using establishedcommunication protocols.
Each layer in the OSI model has well-defined functions, and the methods of each layer communicate and interact with those of the layers immediately above and below as appropriate.
TheInternet protocol suiteas defined inRFC1122andRFC1123is a model of networking developed contemporarily to the OSI model, and was funded primarily by the U.S. Department of Defense. It was the foundation for the development of theInternet. It assumed the presence of generic physical links and focused primarily on the software layers of communication, with a similar but much less rigorous structure than the OSI model.
In comparison, several networking models have sought to create an intellectual framework for clarifying networking concepts and activities,but none have been as successful as the OSI reference model in becoming the standard model for discussing and teaching networking in the field ofinformation technology. The model allows transparent communication through equivalent exchange ofprotocol data units(PDUs) between two parties, through what is known aspeer-to-peer networking(also known as peer-to-peer communication). As a result, the OSI reference model has not only become an important piece among professionals and non-professionals alike, but also in all networking between one or many parties, due in large part to its commonly accepted user-friendly framework.
The development of the OSI model started in the late 1970s to support the emergence of the diverse computer networking methods that were competing for application in the large national networking efforts in the world (seeOSI protocolsandProtocol Wars). In the 1980s, the model became a working product of the Open Systems Interconnection group at theInternational Organization for Standardization(ISO). While attempting to provide a comprehensive description of networking, the model failed to garner reliance during the design of theInternet, which is reflected in the less prescriptiveInternet Protocol Suite, principally sponsored under the auspices of theInternet Engineering Task Force(IETF).
In the early- and mid-1970s, networking was largely either government-sponsored (NPL networkin the UK,ARPANETin the US,CYCLADESin France) or vendor-developed with proprietary standards, such asIBM'sSystems Network ArchitectureandDigital Equipment Corporation'sDECnet.Public data networkswere only just beginning to emerge, and these began to use theX.25standard in the late 1970s.
TheExperimental Packet Switched Systemin the UKc.1973–1975 identified the need for defining higher-level protocols.The UKNational Computing Centrepublication,Why Distributed Computing, which came from considerable research into future configurations for computer systems,resulted in the UK presenting the case for an international standards committee to cover this area at the ISO meeting inSydneyin March 1977.
Beginning in 1977, the ISO initiated a program to develop general standards and methods of networking. A similar process evolved at theInternational Telegraph and Telephone Consultative Committee(CCITT, from French:Comité Consultatif International Téléphonique et Télégraphique). Both bodies developed documents that defined similar networking models. The BritishDepartment of Trade and Industryacted as the secretariat, anduniversities in the United Kingdomdevelopedprototypesof the standards.
The OSI model was first defined in raw form inWashington, D.C., in February 1978 by French software engineerHubert Zimmermann, and the refined but still draft standard was published by the ISO in 1980.
The drafters of the reference model had to contend with many competing priorities and interests. The rate of technological change made it necessary to define standards that new systems could converge to rather than standardizing procedures after the fact; the reverse of the traditional approach to developing standards.Although not a standard itself, it was a framework in which future standards could be defined.
In May 1983,the CCITT and ISO documents were merged to formThe Basic Reference Model for Open Systems Interconnection, usually referred to as theOpen Systems Interconnection Reference Model,OSI Reference Model, or simplyOSI model. It was published in 1984 by both the ISO, as standard ISO 7498, and the renamed CCITT (now called the Telecommunications Standardization Sector of theInternational Telecommunication UnionorITU-T) as standard X.200.
OSI had two major components: an abstract model of networking, called the Basic Reference Model or seven-layer model, and aset of specific protocols. The OSI reference model was a major advance in thestandardisationof network concepts. It promoted the idea of a consistent model of protocol layers, defining interoperability between network devices and software.
The concept of a seven-layer model was provided by the work ofCharles BachmanatHoneywell Information Systems.Various aspects of OSI design evolved from experiences with the NPL network, ARPANET, CYCLADES,EIN, and theInternational Network Working Group(IFIPWG6.1). In this model, a networking system was divided into layers. Within each layer, one or more entities implement its functionality. Each entity interacted directly only with the layer immediately beneath it and provided facilities for use by the layer above it.
The OSI standards documents are available from the ITU-T as the X.200 series of recommendations.Some of the protocol specifications were also available as part of the ITU-T X series. The equivalent ISO/IEC standards for the OSI model were available from ISO. Not all are free of charge.
OSI was an industry effort, attempting to get industry participants to agree on common network standards to provide multi-vendor interoperability.It was common for large networks to support multiple network protocol suites, with many devices unable to interoperate with other devices because of a lack of common protocols. For a period in the late 1980s and early 1990s, engineers, organizations and nations becamepolarized over the issue of which standard, the OSI model or theInternet protocol suite, would result in the best and most robust computer networks.However, while OSI developed its networking standards in the late 1980s,TCP/IPcame into widespread use on multi-vendor networks forinternetworking.
The OSI model is still used as a reference for teaching and documentation;however, theOSI protocolsoriginally conceived for the model did not gain popularity. Some engineers argue the OSI reference model is still relevant tocloud computing.Others say the original OSI model does not fit today's networking protocols and have suggested instead a simplified approach.
Communication protocolsenable an entity in one host to interact with a corresponding entity at the same layer in another host. Service definitions, like the OSI model, abstractly describe the functionality provided to a layerNby a layerN−1, whereNis one of the seven layers of protocols operating in the local host.
At each levelN, two entities at the communicating devices (layer Npeers) exchangeprotocol data units(PDUs) by means of a layer Nprotocol. Each PDU contains a payload, called theservice data unit(SDU), along with protocol-related headers or footers.
Data processing by two communicating OSI-compatible devices proceeds as follows:
The OSI model was defined in ISO/IEC 7498 which consists of the following parts:
ISO/IEC 7498-1 is also published as ITU-T Recommendation X.200.
The recommendation X.200 describes seven layers, labelled 1 to 7. Layer 1 is the lowest layer in this model.
The physical layer is responsible for the transmission and reception of unstructured raw data between a device, such as anetwork interface controller,Ethernet hub, ornetwork switch, and a physicaltransmission medium. It converts the digital bits into electrical, radio, or optical signals. Layer specifications define characteristics such as voltage levels, the timing of voltage changes, physical data rates, maximum transmission distances, modulation scheme, channel access method and physical connectors. This includes the layout ofpins,voltages, lineimpedance, cable specifications, signal timing and frequency for wireless devices. Bit rate control is done at the physical layer and may define transmission mode assimplex,half duplex, andfull duplex. The components of a physical layer can be described in terms of thenetwork topology. Physical layer specifications are included in the specifications for the ubiquitousBluetooth,Ethernet, andUSBstandards. An example of a less well-known physical layer specification would be for theCANstandard.
The physical layer also specifies how encoding occurs over a physical signal, such as electrical voltage or a light pulse. For example, a 1 bit might be represented on a copper wire by the transition from a 0-volt to a 5-volt signal, whereas a 0 bit might be represented by the transition from a 5-volt to a 0-volt signal. As a result, common problems occurring at the physical layer are often related to the incorrect media termination, EMI or noise scrambling, and NICs and hubs that are misconfigured or do not work correctly.
The data link layer providesnode-to-node data transfer—a link between two directly connected nodes. It detects and possibly corrects errors that may occur in the physical layer. It defines the protocol to establish and terminate a connection between two physically connected devices. It also defines the protocol forflow controlbetween them.
IEEE 802divides the data link layer into two sublayers:
The MAC and LLC layers of IEEE 802 networks such as802.3Ethernet,802.11Wi-Fi, and802.15.4Zigbeeoperate at the data link layer.
ThePoint-to-Point Protocol(PPP) is a data link layer protocol that can operate over several different physical layers, such assynchronousandasynchronousserial lines.
TheITU-TG.hnstandard, which provides high-speed local area networking over existing wires (power lines, phone lines and coaxial cables), includes a complete data link layer that provides botherror correctionand flow control by means of aselective-repeatsliding-window protocol.
Security, specifically (authenticated) encryption, at this layer can be applied withMACsec.
The network layer provides the functional and procedural means of transferringpacketsfrom one node to another connected in "different networks". A network is a medium to which many nodes can be connected, on which every node has anaddressand which permits nodes connected to it to transfer messages to other nodes connected to it by merely providing the content of a message and the address of the destination node and letting the network find the way to deliver the message to the destination node, possiblyroutingit through intermediate nodes. If the message is too large to be transmitted from one node to another on the data link layer between those nodes, the network may implement message delivery by splitting the message into several fragments at one node, sending the fragments independently, and reassembling the fragments at another node. It may, but does not need to, report delivery errors.
Message delivery at the network layer is not necessarily guaranteed to be reliable; a network layer protocol may provide reliable message delivery, but it does not need to do so.
A number of layer-management protocols, a function defined in themanagement annex, ISO 7498/4, belong to the network layer. These include routing protocols, multicast group management, network-layer information and error, and network-layer address assignment. It is the function of the payload that makes these belong to the network layer, not the protocol that carries them.
The transport layer provides the functional and procedural means of transferring variable-length data sequences from a source host to a destination host from one application to another across a network while maintaining the quality-of-service functions. Transport protocols may be connection-oriented or connectionless.
This may require breaking large protocol data units or long data streams into smaller chunks called "segments", since the network layer imposes a maximum packet size called themaximum transmission unit(MTU), which depends on the maximum packet size imposed by all data link layers on the network path between the two hosts. The amount of data in a data segment must be small enough to allow for a network-layer header and a transport-layer header. For example, for data being transferred acrossEthernet, the MTU is 1500 bytes, the minimum size of a TCP header is 20 bytes, and the minimum size of an IPv4 header is 20 bytes, so the maximum segment size is 1500−(20+20) bytes, or 1460 bytes. The process of dividing data into segments is calledsegmentation; it is an optional function of the transport layer. Some connection-oriented transport protocols, such asTCPand the OSI connection-oriented transport protocol (COTP), perform segmentation and reassembly of segments on the receiving side; connectionless transport protocols, such asUDPand the OSI connectionless transport protocol (CLTP), usually do not.
The transport layer also controls the reliability of a given link between a source and destination host through flow control, error control, and acknowledgments of sequence and existence. Some protocols are state- andconnection-oriented. This means that the transport layer can keep track of the segments and retransmit those that fail delivery through the acknowledgment hand-shake system. The transport layer will also provide the acknowledgement of the successful data transmission and sends the next data if no errors occurred.
Reliability, however, is not a strict requirement within the transport layer. Protocols like UDP, for example, are used in applications that are willing to accept some packet loss, reordering, errors or duplication.Streaming media, real-time multiplayer games andvoice over IP(VoIP) are examples of applications in which loss of packets is not usually a fatal problem.
The OSI connection-oriented transport protocol defines five classes of connection-mode transport protocols, ranging from class 0 (which is also known as TP0 and provides the fewest features) to class 4 (TP4, designed for less reliable networks, similar to the Internet). Class 0 contains no error recovery and was designed for use on network layers that provide error-free connections. Class 4 is closest to TCP, although TCP contains functions, such as the graceful close, which OSI assigns to the session layer. Also, all OSI TP connection-modeprotocolclasses provide expedited data and preservation of record boundaries. Detailed characteristics of TP0–4 classes are shown in the following table:
An easy way to visualize the transport layer is to compare it with a post office, which deals with the dispatch and classification of mail and parcels sent. A post office inspects only the outer envelope of mail to determine its delivery. Higher layers may have the equivalent of double envelopes, such as cryptographic presentation services that can be read by the addressee only. Roughly speaking,tunnelling protocolsoperate at the transport layer, such as carrying non-IP protocols such asIBM'sSNAorNovell'sIPXover an IP network, or end-to-end encryption withIPsec. WhileGeneric Routing Encapsulation(GRE) might seem to be a network-layer protocol, if the encapsulation of the payload takes place only at the endpoint, GRE becomes closer to a transport protocol that uses IP headers but contains complete Layer 2 frames or Layer 3 packets to deliver to the endpoint.L2TPcarriesPPPframes inside transport segments.
Although not developed under the OSI Reference Model and not strictly conforming to the OSI definition of the transport layer, theTransmission Control Protocol(TCP) and theUser Datagram Protocol(UDP) of the Internet Protocol Suite are commonly categorized as layer 4 protocols within OSI.
Transport Layer Security(TLS) does not strictly fit inside the model either. It contains characteristics of the transport and presentation layers.
The session layer creates the setup, controls the connections, and ends theteardown, between two or more computers, which is called a "session". Common functions of the session layer include user logon (establishment) and user logoff (termination) functions. Including this matter, authentication methods are also built into most client software, such as FTP Client and NFS Client for Microsoft Networks. Therefore, the session layer establishes, manages and terminates the connections between the local and remote applications. The session layer also provides forfull-duplex,half-duplex, orsimplexoperation,and establishes procedures for checkpointing, suspending, restarting, and terminating a session between two related streams of data, such as an audio and a video stream in a web-conferencing application. Therefore, the session layer is commonly implemented explicitly in application environments that useremote procedure calls.
The presentation layer establishes data formatting and data translation into a format specified by the application layer during the encapsulation of outgoing messages while being passed down theprotocol stack, and possibly reversed during the deencapsulation of incoming messages when being passed up the protocol stack. For this very reason, outgoing messages during encapsulation are converted into a format specified by the application layer, while the conversion for incoming messages during deencapsulation are reversed.
The presentation layer handles protocol conversion, data encryption, data decryption, data compression, data decompression, incompatibility of data representation between operating systems, and graphic commands. The presentation layer transforms data into the form that the application layer accepts, to be sent across a network. Since the presentation layer converts data and graphics into a display format for the application layer, the presentation layer is sometimes called the syntax layer.For this reason, the presentation layer negotiates the transfer of syntax structure through theBasic Encoding RulesofAbstract Syntax Notation One(ASN.1), with capabilities such as converting anEBCDIC-codedtext fileto anASCII-coded file, orserializationofobjectsand otherdata structuresfrom and toXML.
The application layer is the layer of the OSI model that is closest to the end user, which means both the OSI application layer and the user interact directly with a software application that implements a component of communication between the client and server, such asFile ExplorerandMicrosoft Word. Such application programs fall outside the scope of the OSI model unless they are directly integrated into the application layer through the functions of communication, as is the case with applications such asweb browsersandemail programs. Other examples of software are Microsoft Network Software for File and Printer Sharing and Unix/Linux Network File System Client for access to shared file resources.
Application-layer functions typically include file sharing, message handling, and database access, through the most common protocols at the application layer, known as HTTP, FTP, SMB/CIFS, TFTP, and SMTP. When identifying communication partners, the application layer determines the identity and availability of communication partners for an application with data to transmit. The most important distinction in the application layer is the distinction between the application entity and the application. For example, a reservation website might have two application entities: one usingHTTPto communicate with its users, and one for a remote database protocol to record reservations. Neither of these protocols have anything to do with reservations. That logic is in the application itself. The application layer has no means to determine the availability of resources in the network.
Cross-layer functions are services that are not tied to a given layer, but may affect more than one layer.Some orthogonal aspects, such as management andsecurity, involve all of the layers (SeeITU-TX.800 Recommendation). These services are aimed at improving theCIA triad—confidentiality,integrity, andavailability—of the transmitted data.
Cross-layer functions are the norm, in practice, because the availability of a communication service is determined by the interaction betweennetwork designandnetwork managementprotocols.
Specific examples of cross-layer functions include the following:
Neither the OSI Reference Model, nor anyOSI protocolspecifications, outline any programming interfaces, other than deliberately abstract service descriptions. Protocol specifications define a methodology for communication between peers, but the software interfaces are implementation-specific.
For example, theNetwork Driver Interface Specification(NDIS) andOpen Data-Link Interface(ODI) are interfaces between the media (layer 2) and the network protocol (layer 3).
The table below presents a list of OSI layers, the original OSI protocols, and someapproximatemodern matches. This correspondence is rough: the OSI model contains idiosyncrasies not found in later systems such as the IP stack in modern Internet.
The design of protocols in theTCP/IP modelof the Internet does not concern itself with strict hierarchical encapsulation and layering.RFC3439contains a section entitled "Layeringconsidered harmful".TCP/IP does recognize four broad layers of functionality which are derived from the operating scope of their contained protocols: the scope of the software application; the host-to-host transport path; the internetworking range; and the scope of the direct links to other nodes on the local network.
Despite using a different concept for layering than the OSI model, these layers are often compared with the OSI layering scheme in the following manner:
These comparisons are based on the original seven-layer protocol model as defined in ISO 7498, rather than refinements in the internal organization of the network layer.
TheOSI protocol suitethat was specified as part of the OSI project was considered by many as too complicated and inefficient, and to a large extent unimplementable.Taking the "forklift upgrade" approach to networking, it specified eliminating all existing networking protocols and replacing them at all layers of the stack. This made implementation difficult and was resisted by many vendors and users with significant investments in other network technologies. In addition, the protocols included so many optional features that many vendors' implementations were not interoperable.
Although the OSI model is often still referenced, theInternet protocol suitehas become the standard for networking. TCP/IP's pragmatic approach to computer networking and to independent implementations of simplified protocols made it a practical methodology.Some protocols and specifications in the OSI stack remain in use, one example beingIS-IS, which was specified for OSI as ISO/IEC 10589:2002 and adapted for Internet use with TCP/IP as RFC 1142.