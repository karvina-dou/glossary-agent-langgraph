TheTrivial File Transfer Protocol(TFTP) is a simplelockstepcommunication protocolfor transmitting or receiving files in aclient-serverapplication. A primary use of TFTP is in the early stages of nodes booting on alocal area networkwhen the operating system or firmware images are stored on a file server.
TFTP was first standardized in 1981and updated inRFC1350.
Due to its simple design, TFTP can be easily implemented by code with a smallmemory footprint. It is, therefore, the protocol of choice for the initial stages of anynetwork bootingstrategy likeBOOTP,PXE,BSDP, etc.,  when targeting from highly resourced computers to very low resourcedSingle-board computers(SBC) andSystem on a Chip(SoC). It is also used to transferfirmwareimages and configuration files to network appliances likerouters,firewalls,IP phones, etc. Today, TFTP is virtually unused for Internet transfers.
TFTP's design was influenced from the earlier protocolEFTP, which was part of thePARC Universal Packet protocol suite. TFTP was first defined in 1980 byIEN133.In June 1981 The TFTP Protocol (Revision 2) was published as RFC 783 and later updated in July 1992 by RFC 1350 which fixed among other things theSorcerer's Apprentice syndrome. In March 1995 the TFTP Option Extension RFC 1782 updated later in May 1998 by RFC 2347, defined the option negotiation mechanism which establishes the framework for file transfer options to be negotiated prior to the transfer using a mechanism that is consistent with TFTP's original specification.
TFTP is a simple protocol for transferring files, implemented on top of theUDP/IPprotocols usingwell-known portnumber 69. TFTP was designed to be small and easy to implement, and therefore it lacks most of the advanced features offered by more robust file transfer protocols. TFTP only reads and writes files from or to a remote server. It cannot list, delete, or rename files or directories and it has no provisions for user authentication.
Today TFTP is generally only used onlocal area networks(LAN).
A TFTP transfer is initiated by the client issuing a request to read or write a particular file on the server. The request can optionally include a set of negotiated transfer parameters proposed by the client under the terms specified by RFC 2347. If the server grants the request, the file is sent in fixed-length blocks of 512 bytes by default or the number specified in the blocksize negotiated option defined by RFC 2348. Each block of transferred data, which is usually carried within a single IP packet in order to avoid IP fragmentation, must be acknowledged before the next block can be sent. A data packet of less than 512 bytes or the agreed blocksize option signals the termination of a transfer. If a packet gets lost in the network, the intended recipient will timeout and may retransmit their last packet (which may be data or an acknowledgment), thus causing the sender of the lost packet to retransmit that lost packet. The sender has to keep just one packet on hand for retransmission since the lock step acknowledgment guarantees that all older packets have been correctly received. Notice that both devices involved in a transfer are considered senders and receivers. One sends data and receives acknowledgments, the other sends acknowledgments and receives data.
TFTP defines three modes of transfer: netascii, octet, and mail.
TFTP uses theUser Datagram Protocol(UDP) at thetransport layer. A transfer request is always initiated targeting port 69, but the data transfer ports are chosen independently by the sender and receiver during the transfer initialization. The ports are chosen at random according to the parameters of the networking stack, typically from the range ofephemeral ports.
TFTP has typically been associated with network booting. One of the first applications was the Bootstrap Loading using TFTP standard RFC 906, published in 1984, which established the 1981 published Trivial File Transfer Protocol standard RFC 783 to be used as the standard file transfer protocol for bootstrap loading. It was followed shortly after by theBootstrap Protocolstandard RFC 951 (BOOTP), published in 1985, which allowed a disk-less client machine to discover its own IP address, the address of a TFTP server, and the name of aNetwork Bootstrap Program(NBP) to be TFTP transferred, loaded into memory, and executed.Dynamic Host Configuration Protocolstandard RFC 2131 (DHCP) published in 1997 improved BOOTP capabilities. Finally, thePreboot Execution Environment(PXE) version 2.0 was released in December 1998, and the update 2.1 was made public in September 1999 counting on TFTP as its file transfer protocol.Intel has recently decided to widely support PXE within the newUEFIspecification extending the TFTP support to all EFI/UEFI environments.
The original protocol has a transfer file size limit of 512 bytes/block x 65535 blocks = 32 MB. In 1998 this limit was extended to 65535 bytes/block x 65535 blocks = 4 GB by TFTP Blocksize Option RFC 2348. If the defined blocksize produces an IP packet size that exceeds the minimumMTUat any point of the network path, IP fragmentation and reassembly will occur not only adding more overheadbut also leading to total transfer failure when the minimalistIP stackimplementation in a host'sBOOTPorPXEROM does not (or fails to properly) implement IP fragmentation and reassembly.If TFTP packets should be kept within the standard Ethernet MTU (1500), the blocksize value is calculated as 1500 minus headers of TFTP (4 bytes), UDP (8 bytes) and IP (20 bytes) = 1468 bytes/block, this gives a limit of 1468 bytes/block x 65535 blocks = 92 MB. Today most servers and clients support block number roll-over (block counter going back to 0 or 1after 65535) which gives an essentially unlimited transfer file size.
Since TFTP utilizes UDP, it has to supply its own transport and session support. Each file transferred via TFTP constitutes an independent exchange. Classically, this transfer is performed in lock-step, with only onepacket(either a block of data or an acknowledgment) alternatively in flight on the network at any time. Due to this single data block strategy instead of sending a larger amount of uninterrupted data blocks before pausing the transfer to wait for the corresponding acknowledge (windowing), TFTP provides lowthroughputespecially over highlatencylinks. Microsoft introduced windowed TFTP in Windows 2008 as part of their Windows Deployment Services (WDS), in January 2015 TFTP Windowsize Option RFC 7440 was published. This substantially improves performance for things likePXEbooting without the IP fragmentation side effect sometimes observed on Blocksize Option RFC 2348
TFTP includes no login or access control mechanisms.  Care must be taken when using TFTP for file transfers where authentication, access control, confidentiality, or integrity checking are needed.  Note that those security services could be supplied above or below the layer at which TFTP runs. Care must also be taken in the rights granted to a TFTP server process so as not to violate the security of the server's file system.  TFTP is often installed with controls such that only files that have public read access are available via TFTP. Also listing, deleting, renaming, and writing files via TFTP are typically disallowed. TFTP file transfers are not recommended where the inherent protocol limitations could raise insurmountable liability concerns.