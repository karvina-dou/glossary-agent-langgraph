In computing, theInternet Message Access Protocol(IMAP) is anInternet standardprotocolused byemail clientsto retrieveemailmessages from amail serverover aTCP/IPconnection.IMAP is defined byRFC9051.
IMAP was designed with the goal of permitting complete management of anemail boxby multiple email clients, therefore clients generally leave messages on the server until the user explicitly deletes them. An IMAP server typically listens onport number143. IMAP overSSL/TLS(IMAPS) is assigned the port number 993.
Virtually all modern e-mail clients andserverssupport IMAP, which along with the earlierPOP3(Post Office Protocol) are the two most prevalent standard protocols for email retrieval.Manywebmailservice providers such asGmailandOutlook.comalso provide support for both IMAP and POP3.
The Internet Message Access Protocol is anapplication layerInternet protocol that allows ane-mail clientto accessemailon a remotemail server. The current version is defined byRFC9051. An IMAP server typically listens onwell-known port143, while IMAP over SSL/TLS (IMAPS) uses 993.
Incoming email messages are sent to an email server that stores messages in the recipient's email box. The user retrieves the messages with an email client that uses one of a number of email retrieval protocols. While some clients and servers preferentially use vendor-specific,proprietary protocols,almost all support POP and IMAP for retrieving email – allowing free choice between manye-mail clientssuch asPegasus MailorMozilla Thunderbirdto access these servers, and allows the clients to be used withother servers.
Email clients using IMAP generally leave messages on the server until the user explicitly deletes them. This and other characteristics of IMAP operation allow multiple clients to manage the same mailbox. Most email clients support IMAP in addition toPost Office Protocol (POP)to retrieve messages.IMAP offers access to the mail storage. Clients may store local copies of the messages, but these are considered to be a temporary cache.
IMAP was designed byMark Crispinin 1986 as a remote access mailbox protocol, in contrast to the widely used POP, a protocol for simply retrieving the contents of a mailbox.
It went through a number of iterations before the current VERSION 4rev2 (IMAP4), as detailed below:
The originalInterim Mail Access Protocolwas implemented as aXeroxLisp Machineclient and aTOPS-20server.
No copies of the original interim protocol specification or its software exist.Although some of its commands and responses were similar to IMAP2, the interim protocol lacked command/response tagging and thus its syntax was incompatible with all other versions of IMAP.
The interim protocol was quickly replaced by theInteractive Mail Access Protocol(IMAP2), defined inRFC1064(in 1988) and later updated byRFC1176(in 1990). IMAP2 introduced the command/response tagging and was the first publicly distributed version.
IMAP3 is an extremely rare variant of IMAP.It was published asRFC1203in 1991. It was written specifically as a counter proposal toRFC1176, which itself proposed modifications to IMAP2.IMAP3 was never accepted by the marketplace.TheIESGreclassified RFC1203 "Interactive Mail Access Protocol – Version 3" as a Historic protocol in 1993. The IMAP Working Group used RFC 1176 (IMAP2) rather than RFC 1203 (IMAP3) as its starting point.
With the advent ofMIME, IMAP2 was extended to support MIME body structures and add mailbox management functionality (create, delete, rename, message upload) that was absent from IMAP2. This experimental revision was called IMAP2bis; its specification was never published in non-draft form. An internet draft of IMAP2bis was published by the IETF IMAP Working Group in October 1993. This draft was based upon the following earlier specifications: unpublishedIMAP2bis.TXTdocument,RFC1176, andRFC1064(IMAP2).TheIMAP2bis.TXTdraft documented the state of extensions to IMAP2 as of December 1992.Early versions ofPinewere widely distributed with IMAP2bis support(Pine 4.00 and later supports IMAP4rev1).
An IMAP Working Group formed in theIETFin the early 1990s took over responsibility for the IMAP2bis design. The IMAP WG decided to rename IMAP2bis to IMAP4 to avoid confusion.
When using POP, clients typically connect to the e-mail server briefly, only as long as it takes to download new messages. When using IMAP4, clients often stay connected as long as the user interface is active and download message content on demand. For users with many or large messages, this IMAP4 usage pattern can result in faster response times.
After successful authentication, the POP protocol provides a completelystaticview of the current state of the mailbox, and does not provide a mechanism to show any external changes in stateduringthe session (the POP client must reconnect and re-authenticate to get an updated view). In contrast, the IMAP protocol provides adynamicview, and requires that external changes in state, including newly arrived messages, as well as changes made to the mailbox by other concurrently connected clients, are detected and appropriate responses are sent between commands as well as during anIDLEcommand, as described inRFC2177. See alsoRFC3501section 5.2 which specifically cites "simultaneous access to the same mailbox by multiple agents".
Usually all Internet e-mail is transmitted inMIMEformat, allowing messages to have atree structurewhere the leaf nodes are any of a variety of single part content types and the non-leaf nodes are any of a variety of multipart types. The IMAP4 protocol allows clients to retrieve any of the individual MIME parts separately and also to retrieve portions of either individual parts or the entire message. These mechanisms allow clients to retrieve the text portion of a message without retrieving attached files or tostreamcontent as it is being fetched.
Through the use of flags defined in the IMAP4 protocol, clients can keep track of message state: for example, whether or not the message has been read, replied to, or deleted. These flags are stored on the server, so different clients accessing the same mailbox at different times can detect state changes made by other clients. POP provides no mechanism for clients to store such state information on the server so if a single user accesses a mailbox with two different POP clients (at different times), state information—such as whether a message has been accessed—cannot be synchronized between the clients. The IMAP4 protocol supports both predefined system flags and client-defined keywords. System flags indicate state information such as whether a message has been read. Keywords, which are not supported by all IMAP servers, allow messages to be given one or moretagswhose meaning is up to the client. IMAP keywords should not be confused with proprietary labels ofweb-based e-mailservices which are sometimes translated into IMAP folders by the corresponding proprietary servers.
IMAP4 clients can create, rename, and delete mailboxes (usually presented to the user as folders) on the server, and copy messages between mailboxes. Multiple mailbox support also allows servers to provide access to shared and public folders. TheIMAP4 Access Control List (ACL) Extension(RFC4314) may be used to regulate access rights.
IMAP4 provides a mechanism for a client to ask the server to search for messages meeting a variety of criteria. This mechanism avoids requiring clients to download every message in the mailbox in order to perform these searches.
Reflecting the experience of earlier Internet protocols, IMAP4 defines an explicit mechanism by which it may be extended. Many IMAP4extensionsto the base protocol have been proposed and are in common use. IMAP2bis did not have an extension mechanism, and POP now has one defined byRFC2449.
IMAP IDLEprovides a way for the mail server to notify connected clients that there were changes to a mailbox, for example because a new mail has arrived. POP provides no comparable feature, and email clients need to periodically connect to the POP server to check for new mail.
While IMAP remedies many of the shortcomings of POP, this inherently introduces additional complexity. Much of this complexity (e.g., multiple clients accessing the same mailbox at the same time) is compensated for byserver-sideworkarounds such asMaildiror database backends.
The IMAP specification has been criticised for being insufficiently strict and allowing behaviours that effectively negate its usefulness. For instance, the specification states that each message stored on the server has a "unique id" to allow the clients to identify messages they have already seen between sessions. However, the specification also allows these UIDs to be invalidated with almost no restrictions, practically defeating their purpose.
From an administrative and resource point of view, the IMAP protocol can be viewed as an early implementation ofcloud computing, as the intent and purpose of IMAP is to maintain your mailbox structure (content, folder structure, individual message state, etc) on the mail server, whereas with POP, this is all maintained on the user's local device. Thus, IMAP requires far more server side resources, incurring a significantly higher cost per mailbox.
Unless the mail storage, indexing and searching algorithms on the server are carefully implemented, a client can potentially consume large amounts of server resources when searching massive mailboxes.
IMAP4 clients need to maintain a TCP/IP connection to the IMAP server in order to be notified of the arrival of new mail. Notification of mail arrival is done throughin-band signaling, which contributes to the complexity of client-side IMAP protocol handling somewhat.A private proposal,push IMAP, would extend IMAP to implementpush e-mailby sending the entire message instead of just a notification. However, push IMAP has not been generally accepted and current IETF work has addressed the problem in other ways (see theLemonade Profilefor more information).
Unlike some proprietary protocols which combine sending and retrieval operations, sending a message and saving a copy in a server-side folder with a base-level IMAP client requires transmitting the message content twice, once to SMTP for delivery and a second time to IMAP to store in a sent mail folder. This is addressed by a set of extensions defined by the IETF Lemonade Profile for mobile devices: URLAUTH (RFC4467) and CATENATE (RFC4469) in IMAP, and BURL (RFC4468) in SMTP-SUBMISSION. In addition to this,Courier Mail Serveroffers a non-standard method of sending using IMAP by copying an outgoing message to a dedicated outbox folder.
To cryptographically protect IMAP connections between the client and server, IMAPS on TCP port 993 can be used, which utilizes SSL/TLS.As of January 2018, TLS is the recommended mechanism.
Alternatively,STARTTLScan be used to encrypt the connection when connecting to port 143 after initially communicating overplaintext.
This is an example IMAP connection as taken fromRFC 3501 section 8: