Network address translation(NAT) is a method of mapping an IPaddress spaceinto another by modifyingnetwork addressinformation in theIP headerof packets while they are in transit across a trafficrouting device.The technique was initially used to bypass the need to assign a new address to every host when a network was moved, or when the upstreamInternet service providerwas replaced but could not route the network's address space. It has become a popular and essential tool in conserving global address space in the face ofIPv4 address exhaustion. One Internet-routableIP addressof a NAT gateway can be used for an entireprivate network.
As network address translation modifies the IP address information in packets, NAT implementations may vary in their specific behavior in various addressing cases and their effect on network traffic. Vendors of equipment containing NAT implementations do not commonly document the specifics of NAT behavior.
Internet Protocolversion 4 (IPv4) uses 32-bit addresses, capable of uniquely addressing about 4.3 billion devices on the network. By 1992, it became evident that that would not be enough. The 1994RFC1631describes NAT as a "short-term solution" to the two most compelling problems facing the Internet Protocol at that time: IP address depletion and scaling in routing. By 2004, NAT had become widespread.
The technique also became known asIP masquerading. which suggests a technique that hides an entire IP address space, usually consisting of private IP addresses, behind a single IP address in another, usually public address space. Because of the popularity of this technique to conserve IPv4 address space, the termNATbecame virtually synonymous with IP masquerading.
In 1996, port-address translation (PAT) was introduced,which expanded the translation of addresses to include port numbers.
The simplest type of NAT provides a one-to-one translation of IP addresses (RFC 1631).RFC2663refers to this type of NAT asbasic NAT, also called aone-to-one NAT. In this type of NAT, only the IP addresses, IP headerchecksum, and any higher-level checksums that include the IP address are changed. Basic NAT can be used to interconnect two IP networks with incompatible addresses.
Most network address translators map multiple private hosts to one publicly exposed IP address.
Here is a typical configuration:
All IP packets have a source IP address and a destination IP address. Typically, packets passing from the private network to the public network will have their source address modified, while packets passing from the public network back to the private network will have their destination address modified. To avoid ambiguity in how replies are translated, further modifications to the packets are required. The vast bulk of Internet traffic usesTransmission Control Protocol(TCP) orUser Datagram Protocol(UDP). For these protocols, theport numbersare changed so that the combination of IP address (within theIP header) and port number (within theTransport Layer header) on the returned packet can be unambiguously mapped to the corresponding private network destination. RFC 2663 uses the termnetwork address and port translation(NAPT) for this type of NAT.Other names includeport address translation(PAT),IP masquerading,NAT overload, andmany-to-one NAT. This is the most common type of NAT and has become synonymous with the termNATin common usage.
This method allows communication through the router only when the conversation originates in the private network, since the initial originating transmission establishes the required information in the translation tables. Thus, aweb browserwithin the private network is able to browse websites that are outside the network, whereas web browsers outside the network are unable to browse a website hosted within.Protocols not based on TCP and UDP require other translation techniques.
The primary benefit of one-to-many NAT is its role to mitigateIPv4 address exhaustionby allowing entire networks to be connected to the Internet using a single public IP address.
Network address and port translation may be implemented in several ways. Some applications that use IP address information may need to determine the external address of a network address translator. This is the address that its communication peers in the external network detect.  Furthermore, it may be necessary to examine and categorize the type of mapping in use, for example when it is desired to set up a direct communication path between two clients both of which are behind separate NAT gateways.
For this purpose, RFC 3489 specified the protocolSimple Traversal of UDP over NATs(STUN) in 2003. It classified NAT implementations asfull-cone NAT,(address) restricted-cone NAT,port-restricted cone NATorsymmetric NAT, and proposed a methodology for testing a device accordingly. However, these procedures have since been deprecated from standards status, as the methods are inadequate to correctly assess many devices. RFC 5389 standardized new methods in 2008 and the acronymSTUNsince represents the new title of the specification:Session Traversal Utilities for NAT.
As many NAT implementations combine multiple types, it is better to refer to specific individual NAT behavior instead of using the Cone/Symmetric terminology. RFC 4787 attempts to alleviate confusion by introducing standardized terminology for observed behaviors. For the first bullet in each row of the above table, the RFC would characterize Full-Cone, Restricted-Cone, and Port-Restricted Cone NATs as having anEndpoint-Independent Mapping, whereas it would characterize a Symmetric NAT as having anAddress- and Port-Dependent Mapping. For the second bullet in each row of the above table, RFC 4787 would also label Full-Cone NAT as having anEndpoint-Independent Filtering, Restricted-Cone NAT as having anAddress-Dependent Filtering, Port-Restricted Cone NAT as having anAddress and Port-Dependent Filtering, and Symmetric NAT as having either anAddress-Dependent FilteringorAddress and Port-Dependent Filtering. Other classifications of NAT behavior mentioned in the RFC include whether they preserve ports, when and how mappings are refreshed, whether external mappings can be used by internal hosts (i.e., itshairpinningbehavior), and the level of determinism NATs exhibit when applying all these rules.Specifically, most NATs combinesymmetric NATfor outgoing connections withstaticport mapping, where incoming packets addressed to the external address and port are redirected to a specific internal address and port.
RFC 4787 distinguishes between NAT mapping and NAT filtering.
Section 4.1 of the RFC covers NAT mapping and specifies the translation of an external IP address and port number into an internal IP address and port number. It defines endpoint-independent mapping, address-dependent mapping and address and port-dependent mapping, explains that these three possible choices do not relate to the security of the NAT as security is determined by the filtering behavior and then specifies "A NAT MUST have an 'Endpoint-Independent Mapping' behavior."
Section 5 of the RFC covers NAT filtering and describes the criteria used by the NAT to filter packets originating from specific external endpoints. The options are endpoint-independent filtering, address-dependent filtering and address and port-dependent filtering.  Endpoint-independent filtering is recommended where maximum application transparency is required while address-dependent filtering is recommended where more stringent filtering behavior is most important.
Some NAT devices are not compliant with RFC 4787 as they treat NAT mapping and filtering in the same way so that their configuration option for changing the NAT filtering method also changes the NAT mapping method (e.g.Netgate TNSR).
NAT traversalproblems arise when peers behind different NATs try to communicate. One way to solve this problem is to useport forwarding. Another way is to use various NAT traversal techniques. The most popular technique for TCP NAT traversal isTCP hole punching.
TCP hole punching requires the NAT to follow theport preservationdesign for TCP. For a given outgoing TCP communication, the same port numbers are used on both sides of the NAT. NAT port preservation for outgoing TCP connections is crucial for TCP NAT traversal because, under TCP, one port can only be used for one communication at a time. Programs that bind distinct TCP sockets toephemeral portsfor each TCP communication, make NAT port prediction impossible for TCP.
On the other hand, for UDP, NATs do not need port preservation. Indeed, multiple UDP communications (each with a distinctendpoint) can occur on the same source port, and applications usually reuse the same UDP socket to send packets to distinct hosts. This makes port prediction straightforward, as it is the same source port for each packet.
Furthermore, port preservation in NAT for TCP allows P2P protocols to offer less complexity and less latency because there is no need to use a third party (like STUN) to discover the NAT port since the application itself already knows the NAT port.
However, if two internal hosts attempt to communicate with the same external host using the same port number, the NAT may attempt to use a different external IP address for the second connection or may need to forgo port preservation and remap the port.
As of 2006, roughly 70% of the clients inpeer-to-peer(P2P) networks employed some form of NAT.
Every TCP and UDP packet contains a source port number and a destination port number. Each of those packets is encapsulated in an IP packet, whoseIP headercontains a source IP address and a destination IP address. The IP address/protocol/port number triple defines an association with anetwork socket.
For publicly accessible services such as web and mail servers the port number is important. For example, port 443 connects through a socket to theweb serversoftware and port 465 to a mail server'sSMTPdaemon.The IP address of a public server is also important, similar in global uniqueness to a postal address or telephone number. Both IP address and port number must be correctly known by all hosts wishing to successfully communicate.
Private IP addresses as described in RFC 1918 are usable only on private networks not directly connected to the internet. Ports are endpoints of communication unique to that host, so a connection through the NAT device is maintained by the combined mapping of port and IP address. A private address on the inside of the NAT is mapped to an external public address. Port address translation (PAT) resolves conflicts that arise when multiple hosts happen to use the same source port number to establish different external connections at the same time.
A NAT device is similar to a phone system at an office that has one public telephone number and multiple extensions. Outbound phone calls made from the office all appear to come from the same telephone number. However, an incoming call that does not specify an extension cannot be automatically transferred to an individual inside the office. In this scenario, the office is a private LAN, the main phone number is the public IP address, and the individual extensions are unique port numbers.
With NAT, all communications sent to external hosts actually contain theexternalIP address and port information of the NAT device instead of internal host IP addresses or port numbers. NAT only translates IP addresses and ports of its internal hosts, hiding the true endpoint of an internal host on a private network.
When a computer on the private (internal) network sends an IP packet to the external network, the NAT device replaces the internal source IP address in the packet header with the external IP address of the NAT device. PAT may then assign the connection a port number from a pool of available ports,inserting this port number in the source port field. The packet is then forwarded to the external network. The NAT device then makes an entry in a translation table containing the internal IP address, original source port, and the translated source port. Subsequent packets from the same internal source IP address and port number are translated to the same external source IP address and port number. The computer receiving a packet that has undergone NAT establishes a connection to the port and IP address specified in the altered packet, oblivious to the fact that the supplied address is being translated.
Upon receiving a packet from the external network, the NAT device searches the translation table based on the destination port in the packet header. If a match is found, the destination IP address and port number is replaced with the values found in the table and the packet is forwarded to the inside network. Otherwise, if the destination port number of the incoming packet is not found in the translation table, the packet is dropped or rejected because the PAT device doesn't know where to send it.
IEEEReverse Address and Port Translation (RAPT or RAT) allows a host whose realIP addresschanges from time to time to remain reachable as a server via a fixed home IP address.Cisco's RAPT implementation is PAT or NAT overloading and maps multiple private IP addresses to a single public IP address. Multiple addresses can be mapped to a single address because each private address is tracked by a port number. PAT uses unique source port numbers on the inside global IP address to distinguish between translations.PAT attempts to preserve the original source port. If this source port is already used, PAT assigns the first available port number starting from the beginning of the appropriate port group 0–511, 512–1023, or 1024–65535. When there are no more ports available and there is more than one external IP address configured, PAT moves to the next IP address to try to allocate the original source port again. This process continues until it runs out of available ports and external IP addresses.
Mapping of Address and Portis a Cisco proposal that combinesAddress plus Porttranslation with tunneling of the IPv4 packets over an ISP provider's internalIPv6network. In effect, it is an (almost)statelessalternative tocarrier-grade NATandDS-Litethat pushes theIPv4 address/port translation function (and the maintenance of NAT state) entirely into the existingcustomer premises equipmentNAT implementation. Thus avoiding theNAT444and statefulness problems of carrier-grade NAT, and also provides a transition mechanism for the deployment of native IPv6 at the same time with very little added complexity.
Hosts behind NAT-enabled routers do not haveend-to-end connectivityand cannot participate in some internet protocols. Services that require the initiation ofTCPconnections from the outside network, or that use stateless protocols such as those usingUDP, can be disrupted. Unless the NAT router makes a specific effort to support such protocols, incoming packets cannot reach their destination. Some protocols can accommodate one instance of NAT between participating hosts ("passive mode"FTP, for example), sometimes with the assistance of anapplication-level gateway(see§ Applications affected by NAT), but fail when both systems are separated from the internet by NAT. The use of NAT also complicatestunneling protocolssuch asIPsecbecause NAT modifies values in the headers which interfere with the integrity checks done byIPsecand other tunneling protocols.
End-to-end connectivity has been a core principle of the Internet, supported, for example, by theInternet Architecture Board. Current Internet architectural documents observe that NAT is a violation of theend-to-end principle, but that NAT does have a valid role in careful design.There is considerably more concern with the use of IPv6 NAT, and many IPv6 architects believe IPv6 was intended to remove the need for NAT.
An implementation that only tracks ports can be quickly depleted by internal applications that use multiple simultaneous connections such as anHTTPrequest for a web page with many embedded objects.  This problem can be mitigated by tracking the destination IP address in addition to the port thus sharing a single local port with many remote hosts. This additional tracking increases implementation complexity and computing resources at the translation device.
Because the internal addresses are all disguised behind one publicly accessible address, it is impossible for external hosts to directly initiate a connection to a particular internal host.  Applications such asVOIP,videoconferencing, and other peer-to-peer applications must useNAT traversaltechniques to function.
Pure NAT, operating on IP alone, may or may not correctly parse protocols with payloads containing information about IP, such asICMP. This depends on whether the payload is interpreted by a host on theinsideoroutsideof the translation. Basic protocols asTCPandUDPcannot function properly unless NAT takes action beyond the network layer.
IP packets have a checksum in each packet header, which provides error detection only for the header. IP datagrams may become fragmented and it is necessary for a NAT to reassemble these fragments to allow correct recalculation of higher-level checksums and correct tracking of which packets belong to which connection.
TCP and UDP, have a checksum that covers all the data they carry, as well as the TCP or UDP header, plus apseudo-headerthat contains the source and destination IP addresses of the packet carrying the TCP or UDP header. For an originating NAT to pass TCP or UDP successfully, it must recompute the TCP or UDP header checksum based on the translated IP addresses, not the original ones, and put that checksum into the TCP or UDP header of the first packet of the fragmented set of packets.
Alternatively, the originating host may performpath MTU Discoveryto determine the packet size that can be transmitted without fragmentation and then set thedon't fragment(DF) bit in the appropriate packet header field.  This is only a one-way solution, because the responding host can send packets of any size, which may be fragmented before reaching the NAT.
Destination network address translation (DNAT) is a technique for transparently changing the destinationIP addressof a routed packet and performing the inverse function for any replies. Anyroutersituated between two endpoints can perform this transformation of the packet.
DNAT is commonly used to publish a service located in a private network on a publicly accessible IP address.  This use of DNAT is also calledport forwarding, orDMZwhen used on an entireserver, which becomes exposed to the WAN, becoming analogous to an undefended militarydemilitarized zone(DMZ).
The meaning of the termSNATvaries by vendor:
Secure network address translation (SNAT) is part of Microsoft'sInternet Security and Acceleration Serverand is an extension to the NAT driver built intoMicrosoft Windows Server. It provides connection tracking and filtering for the additional network connections needed for theFTP,ICMP,H.323, andPPTPprotocols as well as the ability to configure a transparent HTTPproxy server.
Dynamic NAT, just like static NAT, is not common in smaller networks but is found within larger corporations with complex networks. Where static NAT provides a one-to-one internal to public static IP address mapping, dynamic NAT uses agroupof public IP addresses.
NAT hairpinning, also known asNAT loopbackorNAT reflection,is a feature in many consumer routerswhere a machine on theLANis able to access another machine on the LAN via the external IP address of the LAN/router (with port forwarding set up on the router to direct requests to the appropriate machine on the LAN). This notion is officially described in 2008,RFC5128.
The following describes an example network:
If a packet is sent to203.0.113.1by a computer at192.168.1.100, the packet would normally be routed to thedefault gateway(the router)A router with the NAT loopback feature detects that203.0.113.1is the address of its WAN interface, and treats the packet as if coming from that interface. It determines the destination for that packet, based on DNAT (port forwarding) rules for the destination. If the data were sent to port 80 and a DNAT rule exists for port 80 directed to192.168.1.2, then the host at that address receives the packet.
If no applicable DNAT rule is available, the router drops the packet. AnICMP Destination Unreachablereply may be sent. If any DNAT rules were present, address translation is still in effect; the router still rewrites the source IP address in the packet. The local computer (192.168.1.100) sends the packet as coming from192.168.1.100, but the server (192.168.1.2) receives it as coming from203.0.113.1. When the server replies, the process is identical to an external sender. Thus, two-way communication is possible between hosts inside the LAN network via the public IP address.
Network address translation is not commonly used inIPv6because one of the design goals of IPv6 is to restore end-to-end network connectivity.The large addressing space of IPv6 obviates the need to conserve addresses and every device can be given a unique globally routable address. Use ofunique local addressesin combination withnetwork prefix translationcan achieve results similar to NAT.
The large addressing space of IPv6 can still be defeated depending on the actual prefix length given by the carrier. It is not uncommon to be handed a /64 prefix – the smallest recommended subnet – for an entire home network, requiring a variety of techniques to be used to manually subdivide the range for all devices to remain reachable.Even actual IPv6-to-IPv6 NAT, NAT66, can turn out useful at times: the APNIC blog outlines a case where the author was only provided a single address (/128).
Someapplication layerprotocols, such asFile Transfer Protocol(FTP) andSession Initiation Protocol(SIP), send explicit network addresses within their application data. File Transfer Protocol in active mode, for example, uses separate connections for control traffic (commands) and for data traffic (file contents). When requesting a file transfer, the host making the request identifies the corresponding data connection by itsnetwork layerandtransport layeraddresses. If the host making the request lies behind a simple NAT firewall, the translation of the IP address or TCP port number makes the information received by the server invalid. SIP commonly controlsvoice over IPcalls, and suffer the same problem. SIP and its accompanyingSession Description Protocolmay use multiple ports to set up a connection and transmit voice stream viaReal-time Transport Protocol. IP addresses and port numbers are encoded in the payload data and must be known before the traversal of NATs. Without special techniques, such asSTUN, NAT behavior is unpredictable and communications may fail.Application Layer Gateway(ALG) software or hardware may correct these problems. An ALG software module running on a NAT firewall device updates any payload data made invalid by address translation. ALGs need to understand the higher-layer protocol that they need to fix, and so each protocol with this problem requires a separate ALG. For example, on many Linux systems, there are kernel modules calledconnection trackersthat serve to implement ALGs. However, ALG cannot work if the protocol data is encrypted.
Another possible solution to this problem is to useNAT traversaltechniques using protocols such asSTUNorInteractive Connectivity Establishment(ICE), or proprietary approaches in asession border controller. NAT traversal is possible in both TCP- and UDP-based applications, butthe UDP-based techniqueis simpler, more widely understood, and more compatible with legacy NATs.In either case, the high-level protocol must be designed with NAT traversal in mind, and it does not work reliably across symmetric NATs or other poorly behaved legacy NATs.
Other possibilities arePort Control Protocol(PCP),NAT Port Mapping Protocol(NAT-PMP), orInternet Gateway Device Protocolbut these require the NAT device to implement that protocol.
Most client–server protocols (FTP being the main exception), however, do not send layer 3 contact information and do not require any special treatment by NATs. In fact, avoiding NAT complications is practically a requirement when designing new higher-layer protocols today.
NATs can also cause problems whereIPsecencryption is applied and in cases where multiple devices such asSIP phonesare located behind a NAT. Phones that encrypt their signaling with IPsec encapsulate the port information within an encrypted packet, meaning that NAT devices cannot access and translate the port. In these cases, the NAT devices revert to simple NAT operations. This means that all traffic returning to the NAT is mapped onto one client, causing service to more than one client behind the NAT to fail. There are a couple of solutions to this problem: one is to useTLS, which operates atlayer 4and does not mask the port number; another is to encapsulate the IPsec withinUDP– the latter being the solution chosen byTISPANto achieve secure NAT traversal, or a NAT with"IPsec Passthru"support; another is touse a session border controller to help traverse the NAT.
Interactive Connectivity Establishment(ICE) is a NAT traversal technique that does not rely on ALG support.
The DNS protocol vulnerability announced byDan Kaminskyon July 8, 2008,is indirectly affected by NAT port mapping. To avoidDNS cache poisoning, it is highly desirable not to translate UDP source port numbers of outgoing DNS requests from a DNS server behind a firewall that implements NAT. The recommended workaround for the DNS vulnerability is to make all caching DNS servers use randomized UDP source ports. If the NAT function de-randomizes the UDP source ports, the DNS server becomes vulnerable.