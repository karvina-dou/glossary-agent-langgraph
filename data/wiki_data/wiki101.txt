Remote Authentication Dial-In User Service(RADIUS) is a networking protocol that provides centralized authentication, authorization, and accounting (AAA) management for users who connect and use a network service. RADIUS was developed byLivingston Enterprisesin 1991 as an access server authentication and accounting protocol. It was later brought intoIEEE 802andIETFstandards.
RADIUS is aclient/serverprotocol that runs in theapplication layer, and can use eitherTCPorUDP.Network access servers, which control access to a network, usually contain a RADIUS client component that communicates with the RADIUS server.RADIUS is often theback-endof choice for802.1Xauthentication.A RADIUS server is usually abackground processrunning onUNIXorMicrosoft Windows.
The Blast-RADIUS attack breaks RADIUS when it is run on an unencrypted transport protocol like UDP.
RADIUS is anAAA(authentication, authorization, and accounting) protocol that manages network access. RADIUS uses two types ofpacketsto manage the full AAA process: Access-Request, which manages authentication and authorization; and Accounting-Request, which manages accounting.Authenticationandauthorizationare defined in RFC 2865 whileaccountingis described by RFC 2866.
The user or machine sends a request to aNetwork Access Server(NAS) to gain access to a particular network resource using access credentials. The credentials are passed to the NAS device via thelink-layerprotocol—for example,Point-to-Point Protocol(PPP) in the case of manydialuporDSLproviders or posted in anHTTPSsecure web form.
In turn, the NAS sends a RADIUSAccess Requestmessage to the RADIUS server, requesting authorization to grant access via the RADIUS protocol.
This request includes access credentials, typically in the form ofusernameandpasswordor security certificate provided by the user. Additionally, the request may contain other information which the NAS knows about the user, such as itsnetwork addressor phone number, and information regarding the user's physical point of attachment to the NAS.
The RADIUS server checks that the information is correct using authentication schemes such asPAP,CHAPorEAP. The user's proof of identification is verified, along with, optionally, other information related to the request, such as the user's network address or phone number, account status, and specific network service access privileges. Historically, RADIUS servers checked the user's information against a locally stored flat file database.  Modern RADIUS servers can do this, or can refer to external sources—commonlySQL,Kerberos,LDAP, orActive Directoryservers—to verify the user's credentials.
The RADIUS server then returns one of three responses to the NAS: 1) Access Reject, 2) Access Challenge, or 3) Access Accept.
Each of these three RADIUS responses may include a Reply-Message attribute which may give a reason for the rejection, the prompt for the challenge, or a welcome message for the accept. The text in the attribute can be passed on to the user in a return web page.
Authorizationattributesare conveyed to the NAS stipulating terms of access to be granted. For example, the following authorization attributes may be included in an Access-Accept:
When a client is configured to use RADIUS, any user of the client presents authentication information to the client. This might be with a customizable login prompt, where the user is expected to enter their username and password. Alternatively, the user might use a link framing protocol such as the Point-to-Point Protocol (PPP), which has authentication packets which carry this information.
Once the client has obtained such information, it may choose to authenticate using RADIUS. To do so, the client creates an "Access- Request" containing such Attributes as the user's name, the user's password, the ID of the client and the port ID which the user is accessing. When a password is present, it is hidden using a method based on the RSA Message Digest Algorithm MD5.
Accounting is described in RFC 2866.
When network access is granted to the user by theNAS, anAccounting Start(a RADIUS Accounting Request packet containing an Acct-Status-Type attribute with the value "start") is sent by the NAS to the RADIUS server to signal the start of the user's network access. "Start" records typically contain the user's identification, network address, point of attachment and a unique session identifier.
Periodically,Interim Updaterecords (a RADIUS Accounting Request packet containing an Acct-Status-Type attribute with the value "interim-update") may be sent by the NAS to the RADIUS server, to update it on the status of an active session. "Interim" records typically convey the current session duration and information on current data usage.
Finally, when the user's network access is closed, the NAS issues a finalAccounting Stoprecord (a RADIUS Accounting Request packet containing an Acct-Status-Type attribute with the value "stop") to the RADIUS server, providing information on the final usage in terms of time, packets transferred, data transferred, reason for disconnect and other information related to the user's network access.
Typically, the client sends Accounting-Request packets until it receives an Accounting-Response acknowledgement, using some retry interval.
The primary purpose of this data is that the user can bebilledaccordingly; the data is also commonly used forstatisticalpurposes and for general network monitoring.
RADIUS is commonly used to facilitateroamingbetweenISPs, including by:
RADIUS facilitates this by the use ofrealms, which identify where the RADIUS server should forward the AAA requests for processing.
A realm is commonly appended to a user's user name and delimited with an '@' sign, resembling an email address domain name. This is known aspostfixnotation for the realm. Another common usage isprefixnotation, which involves prepending the realm to the username and using '\' as a delimiter.
Modern RADIUS servers allow any character to be used as a realm delimiter, although in practice '@' and '\' are usually used.
Realms can also be compounded using both prefix and postfix notation, to allow for complicated roaming scenarios; for example, somedomain.com\username@anotherdomain.com could be a valid username with two realms.
Although realms often resemble domains, it is important to note that realms are in fact arbitrary text and need not contain real domain names. Realm formats are standardized in RFC 4282, which defines a Network Access Identifier (NAI)  in the form of 'user@realm'. In that specification, the 'realm' portion is required to be a domain name. However, this practice is not always followed.  RFC 7542replaced RFC 4282 in May 2015.
When a RADIUS server receives an AAA request for a user name containing a realm, the server will reference a table of configured realms. If the realm is known, the server will thenproxythe request to the configured home server for that domain. The behavior of the proxying server regarding the removal of the realm from the request ("stripping") is configuration-dependent on most servers. In addition, the proxying server can be configured to add, remove or rewrite AAA requests when they are proxied over time again.
Proxy Chaining is possible in RADIUS and authentication/authorization and accounting packets are usually routed between a NAS Device and a Home server through a series of proxies. Some of advantages of using proxy chains include scalability improvements, policy implementations and capability adjustments. But in roaming scenarios, the NAS, Proxies and Home Server could be typically managed by different administrative entities. Hence, the trust factor among the proxies gains more significance under such Inter-domain applications. Further, the absence of end to end security in RADIUS adds to the criticality of trust among the Proxies involved. Proxy Chains are explained inRFC 2607.
Roaming with RADIUS exposes the users to various security and privacy concerns. More generally, some roaming partners establish a secure tunnel between the RADIUS servers to ensure that users' credentials cannot be intercepted while being proxied across the internet. This is a concern as the MD5 hash built into RADIUS is considered insecure.
RADIUS is transported over UDP/IP onports1812 and 1813.
The RADIUSpacketdata format is shown to the right. The fields are transmitted from left to right, starting with the code, the identifier, the length, the authenticator and the attributes.
Assigned RADIUS Codes (decimal) include the following:
The Identifier field aids in matching requests and replies.
The Length field indicates the length of the entire RADIUS packet including the Code, Identifier, Length, Authenticator and optional Attribute fields.
The Authenticator is used to authenticate the reply from the RADIUS server, and is used in encrypting passwords; its length is 16 bytes.
The RADIUS Attribute Value Pairs (AVP) carry data in both the request and the response for the authentication, authorization, and accounting transactions. The length of the radius packet is used to determine the end of the AVPs.
RADIUS is extensible; many vendors of RADIUS hardware and software implement their own variants using Vendor-Specific Attributes (VSAs). Microsoft has published some of their VSAs.VSA definitions from many other companies remain proprietary and/or ad hoc, nonetheless many VSA dictionaries can be found by downloading the source code of open source RADIUS implementations, for exampleFreeRADIUS.
RFC 2865 Section 5.26 provides a suggested encoding which most vendors follow:
Some vendors use different formats.  For example, some vendors drop the "Vendor Length" field, or they use 2 octets for the "Vendor Type" and/or the "Vendor Length" fields.
RFC 8044 Section 3.14 defines the "vsa" data type which mandates the RFC 2865 Section 5.26 format.
The RADIUS protocol transmits obfuscated passwords using ashared secretand theMD5hashing algorithm. As this particular implementation provides only weak protection of the user's credentials,additional protection, such asIPsectunnels or physically secured data-center networks, should be used to further protect the RADIUS traffic between the NAS device and the RADIUS server. Additionally, the user's security credentials are the only part protected by RADIUS itself, yet other user-specific attributes such as tunnel-group IDs orVLANmemberships passed over RADIUS may be considered sensitive (helpful to an attacker) or private (sufficient to identify the individual client) information as well..
TheRadSecprotocol addresses the issue with legacy RADIUS/UDP security by "wrapping" the RADIUS protocol inTLS.  However, the packets inside of theTLStransport still use MD5 for packet integrity checks and for obfuscating the contents of certain attributes.
The Blast-RADIUS attack breaks RADIUS when it is transported by plain UDP by attacking MD5 within RADIUS.RadSec blocks this attack.Another recommended mitigation is to require Message-Authenticator attributes for all requests and responses.CVE-2024-3596has been assigned for the Blast-RADIUS attack.
As more dial-up customers used theNSFNETarequest for proposalwas sent out byMerit Networkin 1991 to consolidate their various proprietary authentication, authorization and accounting systems. Among the early respondents was Livingston Enterprises and an early version of the RADIUS was written after a meeting. The early RADIUS server was installed on aUNIXoperating system. Livingston Enterprises was acquired byLucent Technologiesand together with Merit steps were taken to gain industry acceptance for RADIUS as a protocol. Both companies offered a RADIUS server at no charge.In 1997 RADIUS was published as RFC 2058 and RFC 2059, current versions are RFC 2865 and RFC 2866.
The original RADIUS standard specified that RADIUS isstatelessand should run over theUser Datagram Protocol(UDP). For authentication it was envisaged that RADIUS should support thePassword Authentication Protocol(PAP) and theChallenge-Handshake Authentication Protocol(CHAP) over thePoint-to-Point Protocol. Passwords are hidden by taking theMD5hash of the packet and a shared secret, and then XORing that hash with the password. The original RADIUS also provided more than 50 attribute-value pairs, with the possibility for vendors to configure their own pairs.
The choice of the hop-by-hop security model, rather thanend-to-end encryption, meant that if several proxy RADIUS servers are in use, every server must examine, perform logic on and pass on all data in a request. This exposes data such as passwords and certificates at every hop. RADIUS servers also did not have the ability to stop access to resources once an authorisation had been issued. Subsequent standards such as RFC 3576 and its successor RFC 5176 allowed for RADIUS servers to dynamically change a users authorization, or to disconnect a user entirely.
Now, several commercial and open-source RADIUS servers exist. Features can vary, but most can look up the users in text files,LDAPservers, various databases, etc. Accounting records can be written to text files, various databases, forwarded to external servers, etc.SNMPis often used for remote monitoring and keep-alive checking of a RADIUS server. RADIUSproxy serversare used for centralized administration and can rewrite RADIUS packets on the fly for security reasons, or to convert between vendor dialects.
TheDiameterprotocol was intended as the replacement for RADIUS. While both are Authentication, Authorization, and Accounting (AAA) protocols, the use-cases for the two protocols have since diverged. Diameter is largely used in the3Gspace. RADIUS is used elsewhere. One of the largest barriers to having Diameter replace RADIUS is thatswitchesandAccess Pointstypically implement RADIUS, but not Diameter. Diameter usesSCTPorTCPwhile RADIUS typically usesUDPas thetransport layer.  As of 2012, RADIUS can also use TCP as the transport layer withTLSfor security.
The RADIUS protocol is currently defined in the followingIETFRFC documents.