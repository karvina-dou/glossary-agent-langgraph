High-Level Data Link Control(HDLC) is acommunication protocolused for transmitting data between devices intelecommunicationandnetworking. Developed by the International Organization for Standardization (ISO), it is defined in the standard ISO/IEC 13239:2002.
HDLC ensures reliable data transfer, allowing one device to understand data sent by another. It can operate with or without a continuous connection between devices, making it versatile for various network configurations.
Originally, HDLC was used in multi-device networks, where one device acted as the master and others as slaves, through modes like Normal Response Mode (NRM) and Asynchronous Response Mode (ARM). These modes are now rarely used. Currently, HDLC is primarily employed inpoint-to-point connections, such as betweenroutersornetwork interfaces, using a mode called Asynchronous Balanced Mode (ABM).
HDLC is based onIBM'sSDLCprotocol, which is the layer 2 protocol for IBM'sSystems Network Architecture(SNA).  It was extended and standardized by theITUas LAP (Link Access Procedure), whileANSInamed their essentially identical versionADCCP.
The HDLC specification does not specify the full semantics of the frame fields. This allows other fully compliant standards to be derived from it, and derivatives have since appeared in innumerable standards.  It was adopted into theX.25protocol stack asLAPB, into theV.42protocol asLAPM, into theFrame Relayprotocol stack asLAPFand into theISDNprotocol stack as LAPD.
The original ISO standards for HDLC are the following:
ISO/IEC 13239:2002, the current standard, replaced all of these specifications.
HDLC was the inspiration for theIEEE 802.2LLCprotocol, and it is the basis for the framing mechanism used with thePPPon synchronous lines, as used by many servers to connect to aWAN, most commonly theInternet.
A similar version is used as the control channel forE-carrier(E1) andSONETmultichannel telephone lines.Cisco HDLCuses low-level HDLC framing techniques but adds a protocol field to the standard HDLC header.
HDLCframescan be transmitted oversynchronousorasynchronous serial communicationlinks. Those links have no mechanism to mark the beginning or end of a frame, so the beginning and end of each frame has to be identified. This is done by using a unique sequence of bits as a frame delimiter, orflag, and encoding the data to ensure that the flag sequence is never seen inside a frame.  Each frame begins and ends with a frame delimiter.  A frame delimiter at the end of a frame may also mark the start of the next frame.
On both synchronous and asynchronous links, the flag sequence is binary "01111110", orhexadecimal0x7E, but the details are quite different.
Because a flag sequence consists of six consecutive 1-bits, other data is coded to ensure that it never contains more than five 1-bits in a row.  This is done bybit stuffing: any time that five consecutive 1-bits appear in the transmitted data, the data is paused and a 0-bit is transmitted.
The receiving device knows that this is being done, and after seeing five 1-bits in a row, a following 0-bit is stripped out of the received data.  If instead the sixth bit is 1, this is either a flag (if the seventh bit is 0), or an error (if the seventh bit is 1).   In the latter case, the frame receive procedure is aborted, to be restarted when a flag is next seen.
This bit-stuffing serves a second purpose, that of ensuring a sufficient number of signal transitions.  On synchronous links, the data isNRZIencoded, so that a 0-bit is transmitted as a change in the signal on the line, and a 1-bit is sent as no change.  Thus, each 0 bit provides an opportunity for a receivingmodemto synchronize its clock via aphase-locked loop.  If there are too many 1-bits in a row, the receiver can lose count.  Bit-stuffing provides a minimum of one transition per six bit times during transmission of data, and one transition per seven bit times during transmission of a flag.
When no frames are being transmitted on a simplex or full-duplex synchronous link, a frame delimiter is continuously transmitted on the link.  This generates one of two continuous waveforms, depending on the initial state:
The HDLC specification allows the 0-bit at the end of a frame delimiter to be shared with the start of the next frame delimiter, i.e. "011111101111110". Some hardware does not support this.
For half-duplex or multi-drop communication, where several transmitters share a line, a receiver on the line will see continuous idling 1-bits in the inter-frame period when no transmitter is active.
HDLC transmits bytes of data with the least significant bit first (not to be confused withlittle-endianorder, which refers to byte ordering within a multi-byte field).
When using asynchronous serial communication such as standardRS-232serial ports, synchronous-style bit stuffing is inappropriate for several reasons:
Instead asynchronous framing uses "control-octet transparency", also called "byte stuffing" or "octet stuffing".  The frame boundary octet is 01111110, (0x7E inhexadecimalnotation).  A "controlescape octet", has the value 0x7D (bit sequence '10111110', as RS-232 transmits least-significant bit first).  If either of these two octets appears in the transmitted data, an escape octet is sent, followed by the original data octet with bit 5 inverted.  For example, the byte 0x7E would be transmitted as 0x7D 0x5E ("10111110 01111010").  Other reserved octet values (such asXON or XOFF) can be escaped in the same way if necessary.
The "abort sequence" 0x7D 0x7E ends a packet with an incomplete byte-stuff sequence, forcing the receiver to detect an error.  This can be used to abort packet transmission with no chance the partial packet will be interpreted as valid by the receiver.
The contents of an HDLC frame are shown in the following table:
Note that the end flag of one frame may be (but does not have to be) the beginning (start) flag of the next frame.
Data is usually sent in multiples of 8 bits, but only some variants require this; others theoretically permitdata alignmentson other than 8-bit boundaries.
Theframe check sequence(FCS) is a 16-bitCRC-CCITTor a 32-bitCRC-32computed over the Address, Control, and Information fields. It provides a means by which the receiver can detect errors that may have been induced during the transmission of the frame, such as lost bits, flipped bits, and extraneous bits. However, given that the algorithms used to calculate the FCS are such that the probability of certain types of transmission errors going undetected increases with the length of the data being checked for errors, the FCS can implicitly limit the practical size of the frame.
If the receiver's calculation of the FCS does not match that of the sender's, indicating that the frame contains errors, the receiver can either send a negativeacknowledgepacket to the sender, or send nothing. After either receiving a negative acknowledge packet or timing out waiting for a positive acknowledge packet, the sender can retransmit the failed frame.
The FCS was implemented because many early communication links had a relatively highbit error rate, and the FCS could readily be computed by simple, fast circuitry or software.  More effectiveforward error correctionschemes are now widely used by other protocols.
Synchronous Data Link Control(SDLC) was originally designed to connect one computer with multiple peripherals via amultidrop bus.  The original "normal response mode" is a primary-secondary mode where the computer (orprimary terminal) gives each peripheral (secondary terminal) permission to speak in turn.  Because all communication is either to or from the primary terminal, frames include only one address, that of the secondary terminal; the primary terminal is not assigned an address.  There is a distinction betweencommandssent by the primary to a secondary, andresponsessent by a secondary to the primary, but this is not reflected in the encoding; commands and responses are indistinguishable except for the difference in the direction in which they are transmitted.
Normal response modeallows the secondary-to-primary link to be shared withoutcontention, because it has the primary give the secondaries permission to transmit one at a time.  It also allows operation overhalf-duplexcommunication links, as long as the primary is aware that it may not transmit when it has permitted a secondary to do so.
Asynchronous response modeis an HDLC additionfor use overfull-duplexlinks.  While retaining the primary/secondary distinction, it allows the secondary to transmit at any time.  Thus, there must be some other mechanism to ensure that multiple secondaries do not try to transmit at the same time (or only one secondary).
Asynchronous balanced modeadds the concept of acombined terminalwhich can act as both a primary and a secondary.  Unfortunately, this mode of operation has some implementation subtleties.  While the most common frames sent do not care whether they are in a command or response frame, some essential ones do (notably most unnumbered frames, and any frame with the P/F bit set), and the address field of a received frame must be examined to determine whether it contains a command (the address received is ours) or a response (the address received is that of the other terminal).
This means that the address field is not optional, even on point-to-point links where it is not needed to disambiguate the peer being talked to.  Some HDLC variants extend the address field to include both source and destination addresses, or an explicit command/response bit.
Three fundamental types of HDLC frames may be distinguished:
The general format of the control field is:
There are also extended (two-byte) forms of I and S frames.  Again, the least significant bit (rightmost in this table) is sent first.
Poll/Final is a single bit with two names. It is called Poll when part of a command (set by the primary station to obtain a response from a secondary station), and Final when part of a response (set by the secondary station to indicate a response or the end of transmission).  In all other cases, the bit is clear.
The bit is used as atokenthat is passed back and forth between the stations.  Only one token should exist at a time.  The secondary only sends a Final when it has received a Poll from the primary. The primary only sends a Poll when it has received a Final back from the secondary, or after a timeout indicating that the bit has been lost.
When operating as a combined station, it is important to maintain the distinction between P and F bits, because there may be two checkpoint cycles operating simultaneously.  A P bit arriving in a command from the remote station is not in response to our P bit; only an F bit arriving in a response is.
Both I and S frames contain a receive sequence number N(R). N(R) provides a positive acknowledgement for the receipt of I-frames from the other side of the link. Its value is always the first frame not yet received; it acknowledges that all frames with N(S) values up to N(R)−1 (modulo 8 or modulo 128) have been received and indicates the N(S) of the next frame it expects to receive.
N(R) operates the same way whether it is part of a command or response. A combined station only has one sequence number space.
This is incremented for successive I-frames, modulo 8 or modulo 128. Depending on the number of bits in the sequence number, up to 7 or 127 I-frames may be awaiting acknowledgment at any time.
Information frames, orI-frames, transport user data from the network layer. In addition they also include flow and error control information piggybacked on data. The sub-fields in the control field define these functions.
The least significant bit (first transmitted) defines the frame type. 0 means an I-frame.
Except for the interpretation of the P/F field, there is no difference between a command I frame and a response I frame; when P/F is 0, the two forms are exactly equivalent.
Supervisory Frames, or 'S-frames', are used for flow and error control whenever piggybacking is impossible or inappropriate, such as when a station does not have data to send.  S-frames in HDLCdo nothave information fields, although some HDLC-derived protocols use information fields for "multi-selective reject".
The S-frame control field includes a leading "10" indicating that it is an S-frame.  This is followed by a 2-bit type, a poll/final bit, and a 3-bit sequence number.  (Or a 4-bit padding field followed by a 7-bit sequence number.)
The first (least significant) 2 bits mean it is an S-frame.  All S frames include a P/F bit and a receive sequence number as described above.  Except for the interpretation of the P/F field, there is no difference between a command S frame and a response S frame; when P/F is 0, the two forms are exactly equivalent.
Unnumbered frames, orU-frames, are primarily used for link management, although a few are used to transfer user data. They  exchange session management and control information between connected devices, and some U-frames contain an information field, used for system management information or user data.
The first 2 bits (11) mean it is a U-frame. The five type bits (2 before P/F bit and 3 bit after P/F bit) can create 32 different types of U-frame.  In a few cases, the same encoding is used for different things as a command and a response.
The various modes are described in§ Link configurations.  Briefly, there are two non-operational modes (initialization mode and disconnected mode) and three operational modes (normal response, asynchronous response, and asynchronous balanced modes) with 3-bit or 7-bit (extended) sequence numbers.
These frames may be used as part of normal information transfer.
There are several U frames which are not part of HDLC, but defined in other related standards.
Link configurations can be categorized as being either:
The three link configurations are:
An additional link configuration isDisconnected mode.  This is the mode that a secondary station is in before it is initialized by the primary, or when it is explicitly disconnected.  In this mode, the secondary responds to almost every frame other than a mode set command with a "Disconnected mode" response.  The purpose of this mode is to allow the primary to reliably detect a secondary being powered off or otherwise reset.
The minimal set required for operation are:
The HDLC module on the other end transmits (UA) frame when the request is accepted. If the request is rejected it sends (DM) disconnect mode frame.
Unnumbered frames are identified by the low two bits being 1.  With the P/F flag, that leaves 5 bits as a frame type.  Even though fewer than 32 values are in use, some types have different meanings depending on the direction they are sent: as a command or as a response.  The relationship between theDISC(disconnect) command and theRD(request disconnect) response seems clear enough, but the reason for makingSARMcommand numerically equal to theDMresponse is obscure.
The UI, UIH, XID, TEST frames contain a payload, and can be used as both commands and responses.  The SM command and FRMR response also contain a payload.