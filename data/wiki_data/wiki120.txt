TheSimple Mail Transfer Protocol(SMTP) is anInternet standardcommunication protocolforelectronic mailtransmission. Mail servers and othermessage transfer agentsuse SMTP to send and receive mail messages. User-levelemail clientstypically use SMTP only for sending messages to a mail server for relaying, and typically submit outgoing email to the mail server on port 587 or 465 perRFC8314. For retrieving messages,IMAP(which replaced the olderPOP3) is standard, but proprietary servers also often implement proprietary protocols, e.g.,Exchange ActiveSync.
SMTP's origins began in 1980, building on concepts implemented on theARPANETsince 1971. It has been updated, modified and extended multiple times. The protocol version in common use today has extensible structure with various extensions forauthentication,encryption, binary data transfer, andinternationalized email addresses. SMTP servers commonly use theTransmission Control Protocolonport number25 (between servers) and 587 (for submission from authenticated clients), both with or without encryption.
Various forms of one-to-oneelectronic messagingwere used in the 1960s. Users communicated using systems developed for specificmainframe computers. As more computers were interconnected, especially in the U.S. Government'sARPANET, standards were developed to permit exchange of messages between different operating systems.
Mail on the ARPANET traces its roots to 1971: the Mail Box Protocol, which was not implemented,but is discussed inRFC196; and theSNDMSGprogram, whichRay TomlinsonofBBNadapted that year to send messages across two computers on the ARPANET.A further proposal for a Mail Protocol was made in RFC 524 in June 1973,which was not implemented.
The use of theFile Transfer Protocol(FTP) for "network mail" on the ARPANET was proposed in RFC 469 in March 1973.Through RFC 561, RFC 680, RFC 724, and finally RFC 733 in November 1977, a standardized framework for "electronic mail" using FTP mail servers on was developed.
SMTP grew out of these standards developed during the 1970s. Ray Tomlinson discussed network mail among theInternational Network Working GroupinINWG Protocol note 2, written in September 1974.INWG discussed protocols for electronic mail in 1979,which was referenced byJon Postelin his early work on Internet email. Postel first proposed an Internet Message Protocol in 1979 as part of theInternet Experiment Note(IEN) series.
In 1980, Postel and Suzanne Sluizer publishedRFC772which proposed the Mail Transfer Protocol as a replacement for the use of the FTP for mail.RFC780of May 1981 removed all references to FTP and allocated port 57 forTCPandUDP,an allocation that has since been removed byIANA. In November 1981, Postel publishedRFC788"Simple Mail Transfer Protocol".
The SMTP standard was developed around the same time asUsenet, a one-to-many communication network with some similarities.
SMTP became widely used in the early 1980s. At the time, it was a complement to theUnix to Unix Copy Program(UUCP), which was better suited for handling email transfers between machines that were intermittently connected. SMTP, on the other hand, works best when both the sending and receiving machines are connected to the network all the time. Both used astore and forwardmechanism and are examples ofpush technology. Though Usenet'snewsgroupswere still propagated with UUCP between servers,UUCP as a mail transport has virtually disappearedalong with the "bang paths" it used as message routing headers.
Sendmail, released with4.1cBSDin 1983, was one of the first mail transfer agents to implement SMTP.Over time, as BSD Unix became the most popular operating system on the Internet, Sendmail became the most commonMTA(mail transfer agent).
The original SMTP protocol supported only unauthenticated unencrypted 7-bit ASCII text communications, susceptible to trivialman-in-the-middle attack,spoofing, andspamming, and requiring any binary data to be encoded to readable text before transmission. Due to absence of a proper authentication mechanism, by design every SMTP server was anopen mail relay. TheInternet Mail Consortium(IMC) reported that 55% of mail servers were open relays in 1998,but less than 1% in 2002.Because of spam concerns most email providersblocklistopen relays,making original SMTP essentially impractical for general use on the Internet.
In November 1995,RFC1869defined Extended Simple Mail Transfer Protocol (ESMTP), which established a general structure for all existing and future extensions which aimed to add-in the features missing from the original SMTP. ESMTP defines consistent and manageable means by which ESMTP clients and servers can be identified and servers can indicate supported extensions.
Message submission (RFC2476) andSMTP-AUTH(RFC2554) were introduced in 1998 and 1999, both describing new trends in email delivery. Originally, SMTP servers were typically internal to an organization, receiving mail for the organizationfrom the outside, and relaying messages from the organizationto the outside. But as time went on, SMTP servers (mail transfer agents), in practice, were expanding their roles to becomemessage submission agentsformail user agents, some of which were now relaying mailfrom the outsideof an organization. (e.g. a company executive wishes to send email while on a trip using the corporate SMTP server.) This issue, a consequence of the rapid expansion and popularity of theWorld Wide Web, meant that SMTP had to include specific rules and methods for relaying mail and authenticating users to prevent abuses such as relaying of unsolicited email (spam). Work on message submission (RFC2476) was originally started because popular mail servers would often rewrite mail in an attempt to fix problems in it, for example, adding a domain name to an unqualified address. This behavior is helpful when the message being fixed is an initial submission, but dangerous and harmful when the message originated elsewhere and is being relayed. Cleanly separating mail into submission and relay was seen as a way to permit and encourage rewriting submissions while prohibiting rewriting relay. As spam became more prevalent, it was also seen as a way to provide authorization for mail being sent out from an organization, as well as traceability. This separation of relay and submission quickly became a foundation for modern email security practices.
As this protocol started out purelyASCIItext-based, it did not deal well with binary files, or characters in many non-English languages. Standards such as Multipurpose Internet Mail Extensions (MIME) were developed to encode binary files for transfer through SMTP. Mail transfer agents (MTAs) developed afterSendmailalso tended to be implemented8-bit clean, so that the alternate "just send eight" strategy could be used to transmit arbitrary text data (in any 8-bit ASCII-like character encoding) via SMTP.Mojibakewas still a problem due to differing character set mappings between vendors, although the email addresses themselves still allowed onlyASCII. 8-bit-clean MTAs today tend to support the 8BITMIME extension, permitting some binary files to be transmitted almost as easily as plain text (limits on line length and permitted octet values still apply, so that MIME encoding is needed for most non-text data and some text formats). In 2012, theSMTPUTF8extension was created to supportUTF-8text, allowing international content and addresses in non-Latinscripts likeCyrillicorChinese.
Many people contributed to the core SMTP specifications, among themJon Postel,Eric Allman, Dave Crocker,Ned Freed, Randall Gellens,John Klensin, andKeith Moore.
Email is submitted by a mail client (mail user agent, MUA) to a mail server (mail submission agent, MSA) using SMTP onTCPport 587. Mostmailbox providersstill allow submission on traditional port 25. The MSA delivers the mail to itsmail transfer agent(MTA). Often, these two agents are instances of the same software launched with different options on the same machine. Local processing can be done either on a single machine, or split among multiple machines; mail agent processes on one machine can share files, but if processing is on multiple machines, they transfer messages between each other using SMTP, where each machine is configured to use the next machine as asmart host. Each process is an MTA (an SMTP server) in its own right.
The boundary MTA usesDNSto look up theMX (mail exchanger) recordfor the recipient's domain (the part of theemail addresson the right of@). The MX record contains the name of the target MTA. Based on the target host and other factors, the sending MTA selects a recipient server and connects to it to complete the mail exchange.
Message transfer can occur in a single connection between two MTAs, or in a series of hops through intermediary systems. A receiving SMTP server may be the ultimate destination, an intermediate "relay" (that is, it stores and forwards the message) or a "gateway" (that is, it may forward the message using some protocol other than SMTP). PerRFC5321section 2.1, each hop is a formal handoff of responsibility for the message, whereby the receiving server must either deliver the message or properly report the failure to do so.
Once the final hop accepts the incoming message, it hands it to amail delivery agent(MDA) for local delivery. An MDA saves messages in the relevantmailboxformat. As with sending, this reception can be done using one or multiple computers, but in the diagram above the MDA is depicted as one box near the mail exchanger box. An MDA may deliver messages directly to storage, orforwardthem over a network using SMTP or other protocol such asLocal Mail Transfer Protocol(LMTP), a derivative of SMTP designed for this purpose.
Once delivered to the local mail server, the mail is stored for batch retrieval by authenticated mail clients (MUAs). Mail is retrieved by end-user applications, called email clients, usingInternet Message Access Protocol(IMAP), a protocol that both facilitates access to mail and manages stored mail, or thePost Office Protocol(POP) which typically uses the traditionalmboxmail file format or a proprietary system such as Microsoft Exchange/Outlook orLotus Notes/Domino.Webmailclients may use either method, but the retrieval protocol is often not a formal standard.
SMTP defines messagetransport, not the messagecontent. Thus, it defines the mailenvelopeand its parameters, such as theenvelope sender, but not the header (excepttrace information) nor the body of the message itself. STD 10 andRFC5321define SMTP (the envelope), while STD 11 andRFC5322define the message (header and body), formally referred to as theInternet Message Format.
SMTP is aconnection-oriented,text-based protocolin which a mail sender communicates with a mail receiver by issuing command strings and supplying necessary data over a reliable ordered data stream channel, typically aTransmission Control Protocol(TCP) connection. AnSMTP sessionconsists of commands originated by an SMTPclient(the initiatingagent, sender, or transmitter) and corresponding responses from the SMTPserver(the listening agent, or receiver) so that the session is opened, and session parameters are exchanged. A session may include zero or more SMTP transactions. AnSMTP transactionconsists of three command/reply sequences:
Besides the intermediate reply for DATA, each server's reply can be either positive (2xx reply codes) or negative. Negative replies can be permanent (5xx codes) or transient (4xx codes). Arejectis a permanent failure and the client should send a bounce message to the server it received it from. Adropis a positive response followed by message discard rather than delivery.
The initiating host, the SMTP client, can be either an end-user'semail client, functionally identified as amail user agent(MUA), or a relay server'smail transfer agent(MTA), that is an SMTP server acting as an SMTP client, in the relevant session, in order to relay mail. Fully capable SMTP servers maintain queues of messages for retrying message transmissions that resulted in transient failures.
A MUA knows theoutgoing mailSMTP server from its configuration. A relay server typically determines which server to connect to by looking up theMX(Mail eXchange)DNSresource record for each recipient'sdomain name. If no MX record is found, a conformant relaying server (not all are) instead looks up theA record. Relay servers can also be configured to use asmart host. A relay server initiates aTCPconnection to the server on the "well-known port" for SMTP:port25, or for connecting to an MSA, port 587. The main difference between an MTA and an MSA is that connecting to an MSA requiresSMTP Authentication.
SMTP is a delivery protocol only. In normal use, mail is "pushed" to a destination mail server (or next-hop mail server) as it arrives. Mail is routed based on the destination server, not the individual user(s) to which it is addressed. Other protocols, such as thePost Office Protocol(POP) and theInternet Message Access Protocol(IMAP) are specifically designed for use by individual users retrieving messages and managingmailboxes. To permit an intermittently-connected mail server topullmessages from a remote server on demand, SMTP has a feature to initiate mail queue processing on a remote server (seeRemote Message Queue Startingbelow). POP and IMAP are unsuitable protocols for relaying mail by intermittently-connected machines; they are designed to operate after final delivery, when information critical to the correct operation of mail relay (the "mail envelope") has been removed.
Remote Message Queue Starting enables a remote host to start processing of the mail queue on a server so it may receive messages destined to it by sending a corresponding command. The originalTURNcommand was deemed insecure and was extended inRFC1985with theETRNcommand which operates more securely using anauthenticationmethod based onDomain Name Systeminformation.
Anemail clientneeds to know the IP address of its initial SMTP server and this has to be given as part of its configuration (usually given as aDNSname). This server will deliver outgoing messages on behalf of the user.
Server administrators need to impose some control on which clients can use the server. This enables them to deal with abuse, for examplespam. Two solutions have been in common use:
Under this system, anISP's SMTP server will not allow access by users who are outside the ISP's network. More precisely, the server may only allow access to users with an IP address provided by the ISP, which is equivalent to requiring that they are connected to the Internet using that same ISP. A mobile user may often be on a network other than that of their normal ISP, and will then find that sending email fails because the configured SMTP server choice is no longer accessible.
This system has several variations. For example, an organisation's SMTP server may only provide service to users on the same network, enforcing this by firewalling to block access by users on the wider Internet. Or the server may perform range checks on the client's IP address. These methods were typically used by corporations and institutions such as universities which provided an SMTP server for outbound mail only for use internally within the organisation. However, most of these bodies now use client authentication methods, as described below.
Where a user is mobile, and may use different ISPs to connect to the internet, this kind of usage restriction is onerous, and altering the configured outbound email SMTP server address is impractical. It is highly desirable to be able to use email client configuration information that does not need to change.
Modern SMTP servers typically requireauthenticationof clients by credentials before allowing access, rather than restricting access by location as described earlier. This more flexible system is friendly to mobile users and allows them to have a fixed choice of configured outbound SMTP server.SMTP Authentication, often abbreviated SMTP AUTH, is an extension of the SMTP in order to log in using an authentication mechanism.
Communication between mail servers generally uses the standardTCPport 25 designated for SMTP.
Mailclientshowever generally don't use this, instead using specific "submission" ports. Mail services generally accept email submission from clients on one of:
Port 2525 and others may be used by some individual providers, but have never been officially supported.
ManyInternet service providersnow block all outgoing port 25 traffic from their customers. Mainly as an anti-spam measure,but also to cure for the higher cost they have when leaving it open, perhaps by charging more from the few customers that require it open.
A typical example of sending a message via SMTP to two mailboxes (aliceandtheboss) located in the same mail domain (example.com) is reproduced in the following session exchange. (In this example, the conversation parts are prefixed withS:andC:, forserverandclient, respectively; these labels are not part of the exchange.)
After the message sender (SMTP client) establishes a reliable communications channel to the message receiver (SMTP server), the session is opened with a greeting by the server, usually containing itsfully qualified domain name(FQDN), in this casesmtp.example.com. The client initiates its dialog by responding with aHELOcommand identifying itself in the command's parameter with its FQDN (or an address literal if none is available).
The client notifies the receiver of the originating email address of the message in aMAIL FROMcommand. This is also the return orbounce addressin case the message cannot be delivered. In this example the email message is sent to two mailboxes on the same SMTP server: one for each recipient listed in theTo:andCc:header fields. The corresponding SMTP command isRCPT TO. Each successful reception and execution of a command is acknowledged by the server with aresult code and response message(e.g.,250 Ok).
The transmission of the body of the mail message is initiated with aDATAcommand after which it is transmitted verbatim line by line and is terminated with an end-of-data sequence. This sequence consists of a new-line (<CR><LF>), a singlefull stop(.), followed by another new-line (<CR><LF>). Since a message body can contain a line with just a period as part of the text, the client sendstwoperiods every time a line starts with a period; correspondingly, the server replaces every sequence of two periods at the beginning of a line with a single one. Such escaping method is calleddot-stuffing.
The server's positive reply to the end-of-data, as exemplified, implies that the server has taken the responsibility of delivering the message. A message can be doubled if there is a communication failure at this time, e.g. due to a power outage: Until the sender has received that250 Okreply, it must assume the message was not delivered. On the other hand, after the receiver has decided to accept the message, it must assume the message has been delivered to it. Thus, during this time span, both agents have active copies of the message that they will try to deliver.The probability that a communication failure occurs exactly at this step is directly proportional to the amount of filtering that the server performs on the message body, most often for anti-spam purposes. The limiting timeout is specified to be 10 minutes.
TheQUITcommand ends the session. If the email has other recipients located elsewhere, the client wouldQUITand connect to an appropriate SMTP server for subsequent recipients after the current destination(s) had been queued. The information that the client sends in theHELOandMAIL FROMcommands are added (not seen in example code) as additional header fields to the message by the receiving server. It adds aReceivedandReturn-Pathheader field, respectively.
Some clients are implemented to close the connection after the message is accepted (250 Ok: queued as 12345), so the last two lines may actually be omitted. This causes an error on the server when trying to send the221 Byereply.
Clients learn a server's supported options by using theEHLOgreeting, as exemplified below, instead of the originalHELO. Clients fall back toHELOonly if the server does not supportEHLOgreeting.
Modern clients may use the ESMTP extension keywordSIZEto query the server for the maximum message size that will be accepted. Older clients and servers may try to transfer excessively sized messages that will be rejected after consuming network resources, including connect time to network links that is paid by the minute.
Users can manually determine in advance the maximum size accepted by ESMTP servers. The client replaces theHELOcommand with theEHLOcommand.
Thussmtp2.example.comdeclares that it can accept a fixed maximum message size no larger than 14,680,064octets(8-bit bytes).
In the simplest case, an ESMTP server declares a maximumSIZEimmediately after receiving anEHLO. According toRFC1870, however, the numeric parameter to theSIZEextension in theEHLOresponse is optional. Clients may instead, when issuing aMAIL FROMcommand, include a numeric estimate of the size of the message they are transferring, so that the server can refuse receipt of overly-large messages.
Original SMTP supports only a single body of ASCII text, therefore any binary data needs to be encoded as text into that body of the message before transfer, and then decoded by the recipient.Binary-to-text encodings, such asuuencodeandBinHexwere typically used.
The 8BITMIME command was developed to address this. It was standardized in 1994 asRFC1652It facilitates thetransparentexchange ofe-mailmessages containing octets outside the seven-bitASCIIcharacter set by encoding them asMIMEcontent parts, typically encoded withBase64.
On-Demand Mail Relay(ODMR) is an SMTP extension standardized inRFC2645that allows an intermittently-connected SMTP server to receive email queued for it when it is connected.
Original SMTP supports email addresses composed ofASCIIcharacters only, which is inconvenient for users whose native script is not Latin based, or who usediacriticnot in the ASCII character set. This limitation was alleviated via extensions enabling UTF-8 in address names.RFC5336introduced experimentalUTF8SMTPcommand and later was superseded byRFC6531that introducedSMTPUTF8command. These extensions provide support for multi-byte and non-ASCII characters in email addresses, such as those with diacritics and other language characters such asGreekandChinese.
Current support is limited, but there is strong interest in broad adoption ofRFC6531and the related RFCs in countries likeChinathat have a large user base where Latin (ASCII) is a foreign script.
Like SMTP, ESMTP is a protocol used to transport Internet mail. It is used as both an inter-server transport protocol and (with restricted behavior enforced) a mail submission protocol.
The main identification feature for ESMTP clients is to open a transmission with the commandEHLO(Extended HELLO), rather thanHELO(Hello, the originalRFC821standard). A server will respond with success (code 250), failure (code 550) or error (code 500, 501, 502, 504, or 421), depending on its configuration. An ESMTP server returns the code 250 OK in a multi-line reply with its domain and a list of keywords to indicate supported extensions. A RFC 821 compliant server returns error code 500, allowing ESMTP clients to try eitherHELOorQUIT.
Each service extension is defined in an approved format in subsequent RFCs and registered with theInternet Assigned Numbers Authority(IANA). The first definitions were the RFC 821 optional services:SEND,SOML(Send or Mail),SAML(Send and Mail),EXPN,HELP, andTURN. The format of additional SMTP verbs was set and for new parameters inMAILandRCPT.
Some relatively common keywords (not all of them corresponding to commands) used today are:
The ESMTP format was restated inRFC2821(superseding RFC 821) and updated to the latest definition inRFC5321in 2008. Support for theEHLOcommand in servers became mandatory, andHELOdesignated a required fallback.
Non-standard, unregistered, service extensions can be used by bilateral agreement, these services are indicated by anEHLOmessage keyword starting with "X", and with any additional parameters or verbs similarly marked.
SMTP commands are case-insensitive. They are presented here in capitalized form for emphasis only. An SMTP server that requires a specific capitalization method is a violation of the standard.
At least the following servers advertise the 8BITMIME extension:
The following servers can be configured to advertise 8BITMIME, but do not perform conversion of 8-bit data to 7-bit when connecting to non-8BITMIME relays:
The SMTP-AUTH extension provides an access control mechanism. It consists of anauthenticationstep through which the client effectively logs into themail serverduring the process of sending mail. Servers that support SMTP-AUTH can usually be configured to require clients to use this extension, ensuring the true identity of the sender is known. The SMTP-AUTH extension is defined inRFC4954.
SMTP-AUTH can be used to allow legitimate users to relay mail while denying relay service to unauthorized users, such asspammers. It does not necessarily guarantee the authenticity of either the SMTPenvelope senderor theRFC2822"From:" header. For example,spoofing, in which one sender masquerades as someone else, is still possible with SMTP-AUTH unless the server is configured to limit message from-addresses to addresses this AUTHed user is authorized for.
The SMTP-AUTH extension also allows one mail server to indicate to another that the sender has been authenticated when relaying mail. In general this requires the recipient server to trust the sending server, meaning that this aspect of SMTP-AUTH is rarely used on the Internet.
Supporting servers include:
Mail delivery can occur both over plain text and encrypted connections, however the communicating parties might not know in advance of other party's ability to use secure channel.
The STARTTLS extensions enables supporting SMTP servers to notify connecting clients that it supportsTLSencrypted communication and offers the opportunity for clients to upgrade their connection by sending the STARTTLS command. Servers supporting the extension do not inherently gain any security benefits from its implementation on its own, as upgrading to aTLSencrypted session is dependent on the connecting client deciding to exercise this option, hence the termopportunisticTLS.
STARTTLS is effective only against passive observation attacks, since the STARTTLS negotiation happens in plain text and an active attacker can trivially remove STARTTLS commands. This type ofman-in-the-middle attackis sometimes referred to asSTRIPTLS, where the encryption negotiation information sent from one end never reaches the other. In this scenario both parties take the invalid or unexpected responses as indication that the other does not properly support STARTTLS, defaulting to traditional plain-text mail transfer.Note that STARTTLS is also defined forIMAPandPOP3in other RFCs, but these protocols serve different purposes: SMTP is used for communication between message transfer agents, while IMAP and POP3 are for end clients and message transfer agents.
In 2014 theElectronic Frontier Foundationbegan "STARTTLS Everywhere" project that, similarly to "HTTPS Everywhere" list, allowed relying parties to discover others supporting secure communication without prior communication. The project stopped accepting submissions on 29 April 2021, and EFF recommended switching toDANEand MTA-STS for discovering information on peers' TLS support.
RFC8314officially declared plain text obsolete and recommend always using TLS for mail submission and access, adding ports with implicit TLS.
RFC7672introduced the ability for DNS records to declare the encryption capabilities of a mail server. UtilisingDNSSEC, mail server operators are able to publish a hash of their TLS certificate, thereby mitigating the possibility of unencrypted communications.
Microsoft expects to enable full SMTP DANE support for Exchange Online customers by the end of 2024.
A newer 2018RFC8461called "SMTP MTA Strict Transport Security (MTA-STS)" aims to address the problem of active adversaries by defining a protocol for mail servers to declare their ability to use secure channels in specific files on the server and specificDNSTXT records. The relying party would regularly check existence of such record, and cache it for the amount of time specified in the record and never communicate over insecure channels until record expires.Note that MTA-STS records apply only to SMTP traffic between mail servers while communications between a user's client and the mail server are protected byTransport Layer Securitywith SMTP/MSA, IMAP, POP3, orHTTPSin combination with an organizational or technical policy. Essentially, MTA-STS is a means to extend such a policy to third parties.
In April 2019 Google Mail announced support for MTA-STS.
Protocols designed to securely deliver messages can fail due to misconfigurations or deliberate active interference, leading to undelivered messages or delivery over unencrypted or unauthenticated channels.RFC8460"SMTP TLS Reporting" describes a reporting mechanism and format for sharing statistics and specific information about potential failures with recipient domains. Recipient domains can then use this information to both detect potential attacks and diagnose unintentional misconfigurations.
In April 2019 Google Mail announced support for SMTP TLS Reporting.
The original design of SMTP had no facility to authenticate senders, or check that servers were authorized to send on their behalf, with the result thatemail spoofingis possible, and commonly used inemail spamandphishing.
Occasional proposals are made to modify SMTP extensively or replace it completely. One example of this isInternet Mail 2000, but neither it, nor any other has made much headway in the face of thenetwork effectof the huge installed base of classic SMTP.
Instead, mail servers now use a range of techniques, such as stricter enforcement of standards such asRFC5322,DomainKeys Identified Mail,Sender Policy FrameworkandDMARC,DNSBLsandgreylistingto reject or quarantine suspicious emails.