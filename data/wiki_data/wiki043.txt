Early research and development:
Merging the networks and creating the Internet:
Commercialization, privatization, broader access leads to the modern Internet:
Examples of Internet services:
TheFile Transfer Protocol(FTP) is a standardcommunication protocolused for the transfer ofcomputer filesfrom a server to a client on acomputer network. FTP is built on a client–server model architecture using separate control and data connections between the client and the server.FTP users may authenticate themselves with aplain-textsign-in protocol, normally in the form of a username and password, but can connect anonymously if the server is configured to allow it. For secure transmission that protects the username and password, and encrypts the content, FTP is oftensecuredwithSSL/TLS(FTPS) or replaced withSSH File Transfer Protocol(SFTP).
The first FTP client applications werecommand-line programsdeveloped beforeoperating systemshadgraphical user interfaces, and are still shipped with mostWindows,Unix, andLinuxoperating systems.Many dedicated FTPclientsand automation utilities have since been developed fordesktops, servers, mobile devices, and hardware, and FTP has been incorporated into productivity applications such asHTML editorsandfile managers.
An FTP client used to be commonly integrated inweb browsers, where file servers are browsed with theURIprefix "ftp://". In 2021, FTP support was dropped byGoogle ChromeandFirefox,two major web browser vendors, due to it being superseded by the more secure SFTP and FTPS; although neither of them have implemented the newer protocols.
The original specification for the File Transfer Protocol was written byAbhay Bhushanand published asRFC114on 16 April 1971. Until 1980, FTP ran onNCP, the predecessor ofTCP/IP.The protocol was later replaced by a TCP/IP version,RFC765(June 1980) andRFC959(October 1985), the current specification. Several proposed standards amendRFC959, for exampleRFC1579(February 1994) enables Firewall-Friendly FTP (passive mode),RFC2228(June 1997) proposes security extensions,RFC2428(September 1998) adds support forIPv6and defines a new type of passive mode.
FTP may run inactiveorpassivemode, which determines how the data connection is established.(This sense of "mode" is different from that of the MODE command in the FTP protocol.)
Both modes were updated in September 1998 to supportIPv6. Further changes were introduced to the passive mode at that time, updating it toextended passive mode.
The server responds over the control connection withthree-digit status codesin ASCII with an optional text message. For example, "200" (or "200 OK") means that the last command was successful. The numbers represent the code for the response and the optional text represents a human-readable explanation or request (e.g. <Need account for storing file>).An ongoing transfer of file data over the data connection can be aborted using an interrupt message sent over the control connection.
FTP needs two ports (one for sending and one for receiving) because it was originally designed to operate on top ofNetwork Control Protocol(NCP), which was asimplex protocolthat utilized twoport addresses, establishing two connections, for two-way communications. An odd and an even port were reserved for eachapplication layerapplication or protocol. The standardization of TCP and UDP reduced the need for the use of two simplex ports for each application down to one duplex port,but the FTP protocol was never altered to only use one port, and continued using two for backwards compatibility.
FTP normally transfers data by having the server connect back to the client, after the PORT command is sent by the client. This is problematic for bothNATsand firewalls, which do not allow connections from the Internet towards internal hosts.For NATs, an additional complication is that the representation of the IP addresses and port number in the PORT command refer to the internal host's IP address and port, rather than the public IP address and port of the NAT.
There are two approaches to solve this problem. One is that the FTP client and FTP server use the PASV command, which causes the data connection to be established from the FTP client to the server.This is widely used by modern FTP clients. Another approach is for the NAT to alter the values of the PORT command, using anapplication-level gatewayfor this purpose.
While transferring data over the network, five data types are defined:
Note these data types are commonly called "modes", although ambiguously that word is also used to refer to active-vs-passive communication mode (see above), and the modes set by the FTP protocol MODE command (see below).
For text files (TYPE A and TYPE E), three different format control options are provided, to control how the file would be printed:
These formats were mainly relevant toline printers; most contemporary FTP clients/servers only support the default format control of N.
File organization is specified using the STRU command. The following file structures are defined in section 3.1.1 of RFC959:
Most contemporary FTP clients and servers only support STRU F. STRU R is still in use in mainframe and minicomputer file transfer applications.
Data transfer can be done in any of three modes:
Most contemporary FTP clients and servers do not implement MODE B or MODE C; FTP clients and servers for mainframe and minicomputer operating systems are the exception to that.
Some FTP software also implements aDEFLATE-based compressed mode, sometimes called "Mode Z" after the command that enables it. This mode was described in anInternet Draft, but not standardized.
GridFTPdefines additional modes, MODE Eand MODE X,as extensions of MODE B.
More recent implementations of FTP support theModify Fact: Modification Time(MFMT) command, which allows a client to adjust thatfile attributeremotely, enabling the preservation of that attribute when uploading files.
To retrieve a remote file timestamp, there'sMDTMcommand. Some servers (and clients) support nonstandard syntax of theMDTMcommand with two arguments, that works the same way asMFMT
FTP login uses normal username and password scheme for granting access.The username is sent to the server using the USER command, and the password is sent using the PASS command.This sequence is unencrypted "on the wire", so may be vulnerable to a networksniffing attack.If the information provided by the client is accepted by the server, the server will send a greeting to the client and the session will commence.If the server supports it, users may log in without providing login credentials, but the same server may authorize only limited access for such sessions.
A host that provides an FTP service may provideanonymousFTP access.Users typically log into the service with an 'anonymous' (lower-case and case-sensitive in some FTP servers) account when prompted for user name. Although users are commonly asked to send theiremailaddress instead of a password,no verification is actually performed on the supplied data.Many FTP hosts whose purpose is to provide software updates will allow anonymous logins.
Many file managers tend to have FTP access implemented, such asFile Explorer(formerly Windows Explorer) onMicrosoft Windows. This client is only recommended for small file transfers from a server, due to limitations compared to dedicated client software.It does not supportSFTP.
Both the native file managers forKDEon Linux (DolphinandKonqueror) support FTP as well as SFTP.
OnAndroid, the My Files file manager onSamsung Galaxyhas a built-in FTP andSFTPclient.
For a long time, most commonweb browserswere able to retrieve files hosted on FTP servers, although not all of them had support for protocol extensions such asFTPS.When an FTP—rather than an HTTP—URLis supplied, the accessible contents on the remote server are presented in a manner that is similar to that used for other web content.
Google Chrome removed FTP support entirely in Chrome 88, also affecting otherChromium-based browsers such asMicrosoft Edge.Firefox 88 disabled FTP support by default, with Firefox 90 dropping support entirely.
FireFTPis a discontinued browser extension that was designed as a full-featured FTP client to be run withinFirefox, but when Firefox dropped support for FTP the extension developer recommended usingWaterfox.Some browsers, such as the text-basedLynx, still support FTP.
FTP URL syntax is described inRFC1738, taking the form:ftp://[user[:password]@]host[:port]/[url-path](the bracketed parts are optional).
For example, the URL ftp://public.ftp-servers.example.com/mydirectory/myfile.txt represents the filemyfile.txtfrom the directorymydirectoryon the serverpublic.ftp-servers.example.comas an FTP resource. The URL ftp://user001:secretpassword@private.ftp-servers.example.com/mydirectory/myfile.txt adds a specification of the username and password that must be used to access this resource.
More details on specifying a username and password may be found in the browsers' documentation (e.g.,FirefoxandInternet Explorer). By default, most web browsers use passive (PASV) mode, which more easily traverses end-user firewalls.
Some variation has existed in how different browsers treat path resolution in cases where there is a non-root home directory for a user.
Most commondownload managerscan receive files hosted on FTP servers, while some of them also give the interface to retrieve the files hosted on FTP servers.DownloadStudioallows not only download a file from FTP server but also view the list of files on a FTP server.
LibreOfficedeclared its FTP support deprecated from 7.4 release, this was later removed in 24.2 release.
FTP was not designed to be a secure protocol, and has many security weaknesses.In May 1999, the authors ofRFC2577listed a vulnerability to the following problems:
FTP does not encrypt its traffic; all transmissions are in clear text, and usernames, passwords, commands and data can be read by anyone able to perform packet capture (sniffing) on the network.This problem is common to many of the Internet Protocol specifications (such asSMTP,Telnet,POPandIMAP) that were designed prior to the creation of encryption mechanisms such asTLSor SSL.
Common solutions to this problem include:
FTP over SSH is the practice of tunneling a normal FTP session over a Secure Shell connection.Because FTP uses multipleTCPconnections (unusual for a TCP/IP protocol that is still in use), it is particularly difficult to tunnel over SSH. With many SSH clients, attempting to set up a tunnel for the control channel (the initial client-to-server connection on port 21) will protect only that channel; when data is transferred, the FTP software at either end sets up new TCP connections (data channels) and thus have noconfidentialityorintegrity protection.
Otherwise, it is necessary for the SSH client software to have specific knowledge of the FTP protocol, to monitor and rewrite FTP control channel messages and autonomously open newpacket forwardingsfor FTP data channels. Software packages that support this mode include:
FTP over SSH should not be confused withSSH File Transfer Protocol(SFTP).
Explicit FTPS is an extension to the FTP standard that allows clients to request FTP sessions to be encrypted. This is done by sending the "AUTH TLS" command. The server has the option of allowing or denying connections that do not request TLS. This protocol extension is defined inRFC4217. Implicit FTPS is an outdated standard for FTP that required the use of a SSL or TLS connection. It was specified to use different ports than plain FTP.
The SSH file transfer protocol (chronologically the second of the two protocols abbreviated SFTP) transfers files and has a similar command set for users, but uses theSecure Shellprotocol (SSH) to transfer files. Unlike FTP, it encrypts both commands and data, preventing passwords and sensitive information from being transmitted openly over the network. It cannot interoperate with FTP software, though some FTP client software offers support for the SSH file transfer protocol as well.
Trivial File Transfer Protocol (TFTP) is a simple, lock-step FTP that allows a client to get a file from or put a file onto a remote host. One of its primary uses is in the early stages ofbooting from a local area network, because TFTP is very simple to implement. TFTP lacks security and most of the advanced features offered by more robust file transfer protocols such as File Transfer Protocol. TFTP was first standardized in 1981 and the current specification for the protocol can be found inRFC1350.
Simple File Transfer Protocol (the first protocol abbreviated SFTP), as defined byRFC913, was proposed as an (unsecured) file transfer protocol with a level of complexity intermediate between TFTP and FTP. It was never widely accepted on theInternet, and is now assigned Historic status by theIETF. It runs through port 115, and often receives the initialism ofSFTP. It has a command set of 11 commands and support three types of data transmission:ASCII,binaryand continuous. For systems with aword sizethat is a multiple of 8 bits, the implementation of binary and continuous is the same. The protocol also supports login with user ID and password, hierarchical folders and file management (includingrename,delete,upload,download,download with overwrite, anddownload with append).
Below is a summary ofFTP reply codesthat may be returned by an FTPserver. These codes have been standardized inRFC959by the IETF. The reply code is a three-digit value. The first digit is used to indicate one of three possible outcomes — success, failure, or to indicate an error or incomplete reply:
The second digit defines the kind of error:
The third digit of the reply code is used to provide additional detail for each of the categories defined by the second digit.