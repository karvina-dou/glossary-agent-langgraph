Incomputer networking, themaximum transmission unit(MTU) is the size of the largestprotocol data unit(PDU) that can be communicated in a singlenetwork layertransaction.The MTU relates to, but is not identical to the maximumframesize that can be transported on thedata link layer, e.g.,Ethernet frame.
Larger MTU is associated with reducedoverhead. Smaller MTU values can reducenetwork delay. In many cases, MTU is dependent on underlying network capabilities and must be adjusted manually or automatically so as to not exceed these capabilities. MTU parameters may appear in association with a communications interface or standard. Some systems may decide MTU at connect time, e.g. usingPath MTU Discovery.
MTUs apply tocommunications protocolsandnetwork layers. The MTU is specified in terms ofbytesoroctetsof the largest PDU that the layer can pass onwards. MTU parameters usually appear in association with a communications interface (NIC,serial port, etc.). Standards (Ethernet, for example) can fix the size of an MTU; or systems (such as point-to-point serial links) may decide MTU at connect time.
Underlyingdata linkandphysical layersusually add overhead to the network layer data to be transported, so for a given maximum frame size of a medium, one needs to subtract the amount of overhead to calculate that medium's MTU. For example, with Ethernet, the maximumframesize is 1518 bytes, 18 bytes of which are overhead (headerandframe check sequence), resulting in an MTU of 1500 bytes.
A larger MTU brings greater efficiency because eachnetwork packetcarries more user data while protocol overheads, such as headers or underlying per-packet delays, remain fixed; the resulting higher efficiency means an improvement in bulk protocol throughput. A larger MTU also requires processing of fewer packets for the same amount of data. In some systems, per-packet-processing can be a critical performance limitation.
However, this gain is not without a downside. Large packets occupy a link for more time than a smaller packet, causing greater delays to subsequent packets, and increasingnetwork delayanddelay variation. For example, a 1500-byte packet, the largest allowed by Ethernet at the network layer, ties up a14.4k modemfor about one second.
Large packets are also problematic in the presence of communications errors. If noforward error correctionis used, corruption of a single bit in a packet requires that the entire packet be retransmitted, which can be costly. At a givenbit error rate, larger packets are more susceptible to corruption. Their greater payload makes retransmissions of larger packets take longer. Despite the negative effects on retransmission duration, large packets can still have a net positive effect on end-to-end TCP performance.
TheInternet protocol suitewas designed to work over many different networking technologies, each of which may use packets of different sizes. While a host will know the MTU of its own interface and possibly that of its peers (from initial handshakes), it will not initially know the lowest MTU in a chain of links to other peers. Another potential problem is that higher-level protocols may create packets larger than even the local link supports.
IPv4 allowsfragmentationwhich divides thedatagraminto pieces, each small enough to accommodate a specified MTU limitation. This fragmentation process takes place at theinternet layer. The fragmented packets are marked so that the IP layer of the destination host knows it should reassemble thepacketsinto the original datagram.
All fragments of a packet must arrive for the packet to be considered received. If the network drops any fragment, the entire packet is lost.
When the number of packets that must be fragmented or the number of fragments is great, fragmentation can cause unreasonable or unnecessary overhead. For example, various tunneling situations may exceed the MTU by very little as they add just a header's worth of data. The addition is small, but each packet now has to be sent in two fragments, the second of which carries very little payload. The same amount of payload is being moved, but every intermediate router has to forward twice as many packets.
The Internet Protocol requires that hosts must be able to process IP datagrams of at least 576 bytes (for IPv4) or 1280 bytes (for IPv6). However, this does not precludelink layerswith an MTU smaller than this minimum MTU from conveying IP data. For example, according to IPv6's specification, if a particular link layer cannot deliver an IP datagram of 1280 bytes in a single frame, then the link layer must provide its own fragmentation and reassembly mechanism, separate from the IP fragmentation mechanism, to ensure that a 1280-byte IP datagram can be delivered, intact, to the IP layer.
In the context ofInternet Protocol, MTU refers to the maximum size of anIP packetthat can be transmitted without fragmentation over a given medium. The size of an IP packet includes IP headers but excludes headers from the link layer. In the case of anEthernet framethis adds aprotocol overheadof 18 bytes, or 22 bytes with anIEEE 802.1Qtag for VLAN tagging orclass of service.
The MTU should not be confused with the minimum datagram size (in one piece or in fragments) that all hosts must be prepared to accept. This is 576 bytes forIPv4and 1280 bytes forIPv6.
The IP MTU and Ethernet maximum frame size are configured separately. In Ethernet switch configuration, MTU may refer to Ethernet maximum frame size. In Ethernet-based routers, MTU normally refers to the IP MTU. Ifjumbo framesare allowed in a network, the IP MTU should also be adjusted upwards to take advantage of this.
Since the IP packet is carried by an Ethernet frame, the Ethernet frame has to be larger than the IP packet. With the normal untagged Ethernet frame overhead of 18 bytes and the 1500-byte payload, the Ethernet maximum frame size is 1518 bytes. If a 1500-byte IP packet is to be carried over a tagged Ethernet connection, the Ethernet frame maximum size needs to be 1522 bytes due to the larger size of an 802.1Q tagged frame.802.3acincreases the standard Ethernet maximum frame size to accommodate this.
The Internet Protocol defines thepath MTUof an Internet transmission path as the smallest MTU supported by any of thehopson the path between a source and destination. Put another way, the path MTU is the largest packet size that can traverse this path without suffering fragmentation.
Path MTU Discoveryis a technique for determining the path MTU between two IP hosts, defined for bothIPv4andIPv6. It works by sending packets with the DF (don't fragment) option in the IP header set. Any device along the path whose MTU is smaller than the packet will drop such packets and send back anICMP Destination Unreachable (Datagram Too Big)message which indicates its MTU. This information allows the source host to reduce its assumed path MTU appropriately. The process repeats until the MTU becomes small enough to traverse the entire path without fragmentation.
Standard Ethernet supports an MTU of 1500 bytes and Ethernet implementation supporting jumbo frames, allow for an MTU up to 9000 bytes. However, border protocols likePPPoEwill reduce this. Path MTU Discovery exposes the difference between the MTU seen by Ethernet end-nodes and the Path MTU.
Unfortunately, increasing numbers of networksdrop ICMP traffic(for example, to preventdenial-of-service attacks), which prevents path MTU discovery from working.Packetization Layer Path MTU Discoveryis a Path MTU Discovery technique which responds more robustly to ICMP filtering. In an IP network, the path from the source address to the destination address may change in response to various events (load-balancing,congestion,outages, etc.) and this could result in the path MTU changing (sometimes repeatedly) during a transmission, which may introduce further packet drops before the host finds a new reliable MTU.
A failure of Path MTU Discovery carries the possible result of making some sites behind badly configuredfirewallsunreachable. A connection with mismatched MTU may work for low-volume data but fail as soon as a host sends a large block of data. For example, withInternet Relay Chata connecting client might see the initial messages up to and including the initialping(sent by the server as an anti-spoofing measure), but get no response after that. This is because the large set of welcome messages sent at that point are packets that exceed the path MTU. One can possibly work around this, depending on which part of the network one controls; for example one can change the MSS (maximum segment size) in the initial packet that sets up theTCPconnection at one's firewall.
MTU is sometimes used to describe the maximum PDU sizes in communication layers other than the network layer.
The transmission of apacketon a physical network segment that is larger than the segment's MTU is known asjabber. This is almost always caused by faulty devices.Network switchesand somerepeater hubshave a built-in capability to detect when a device is jabbering.